@using ComicBookInventory.Shared;
@*@model IEnumerable<ComicBookWithAuthorsAndCharactersViewModel>*@
@model PaginatedList<ComicBookWithAuthorsAndCharactersViewModel>
@{
}

<h2>All Comics</h2>
<form asp-controller="ComicBook" asp-action="GetAllComics" method="get">
    <p>
        Title: <input type="text" name="searchString" />
        <input type="submit" value="Filter" />
    </p>
</form>
<div>
    <h3 class="">@Html.ActionLink("Create","CreateComicBook")</h3>
</div>
<table class="table">
    <thead>
        <tr>
            <th>Title</th>
            <th>Description</th>
            <th>Rating</th>
            <th></th>
        </tr>
    </thead>

    <tbody>
        @if (Model is not null)
        {
            @foreach (var c in Model)
            {
                <tr>
                    <td>@Html.DisplayFor(i => c.Title)</td>
                    <td>@Html.DisplayFor(i => c.Description)</td>
                    <td>@Html.DisplayFor(i => c.Rating)</td>
                    <td>
                        @Html.ActionLink("Edit", "EditComic", new { id=c.Id }) |
                        @Html.ActionLink("Details", "ComicDetails", new { id=c.Id}) |
                        @Html.ActionLink("Delete", "DeleteComic", new { id=c.Id })
                    </td>
                </tr>
            }
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="GetAllComics"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="GetAllComics"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>
### YamlMime:ManagedReference
items:
- uid: ComicBookInventory.Shared.ErrorViewModel
  commentId: T:ComicBookInventory.Shared.ErrorViewModel
  id: ErrorViewModel
  parent: ComicBookInventory.Shared
  children:
  - ComicBookInventory.Shared.ErrorViewModel.Message
  - ComicBookInventory.Shared.ErrorViewModel.Path
  - ComicBookInventory.Shared.ErrorViewModel.StatusCode
  - ComicBookInventory.Shared.ErrorViewModel.ToString
  langs:
  - csharp
  - vb
  name: ErrorViewModel
  nameWithType: ErrorViewModel
  fullName: ComicBookInventory.Shared.ErrorViewModel
  type: Class
  source:
    remote:
      path: src/ComicBookInventory.Domain/Entities/ViewModels/ErrorViewModel.cs
      branch: wip/extend-character-model
      repo: git@github.com:rnemeth90/ComicBookInventoryApp.git
    id: ErrorViewModel
    path: Entities/ViewModels/ErrorViewModel.cs
    startLine: 9
  assemblies:
  - ComicBookInventory.Domain
  namespace: ComicBookInventory.Shared
  syntax:
    content: public class ErrorViewModel
    content.vb: Public Class ErrorViewModel
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: ComicBookInventory.Shared.ErrorViewModel.StatusCode
  commentId: P:ComicBookInventory.Shared.ErrorViewModel.StatusCode
  id: StatusCode
  parent: ComicBookInventory.Shared.ErrorViewModel
  langs:
  - csharp
  - vb
  name: StatusCode
  nameWithType: ErrorViewModel.StatusCode
  fullName: ComicBookInventory.Shared.ErrorViewModel.StatusCode
  type: Property
  source:
    remote:
      path: src/ComicBookInventory.Domain/Entities/ViewModels/ErrorViewModel.cs
      branch: wip/extend-character-model
      repo: git@github.com:rnemeth90/ComicBookInventoryApp.git
    id: StatusCode
    path: Entities/ViewModels/ErrorViewModel.cs
    startLine: 11
  assemblies:
  - ComicBookInventory.Domain
  namespace: ComicBookInventory.Shared
  syntax:
    content: public int StatusCode { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property StatusCode As Integer
  overload: ComicBookInventory.Shared.ErrorViewModel.StatusCode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ComicBookInventory.Shared.ErrorViewModel.Message
  commentId: P:ComicBookInventory.Shared.ErrorViewModel.Message
  id: Message
  parent: ComicBookInventory.Shared.ErrorViewModel
  langs:
  - csharp
  - vb
  name: Message
  nameWithType: ErrorViewModel.Message
  fullName: ComicBookInventory.Shared.ErrorViewModel.Message
  type: Property
  source:
    remote:
      path: src/ComicBookInventory.Domain/Entities/ViewModels/ErrorViewModel.cs
      branch: wip/extend-character-model
      repo: git@github.com:rnemeth90/ComicBookInventoryApp.git
    id: Message
    path: Entities/ViewModels/ErrorViewModel.cs
    startLine: 12
  assemblies:
  - ComicBookInventory.Domain
  namespace: ComicBookInventory.Shared
  syntax:
    content: public string Message { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Message As String
  overload: ComicBookInventory.Shared.ErrorViewModel.Message*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ComicBookInventory.Shared.ErrorViewModel.Path
  commentId: P:ComicBookInventory.Shared.ErrorViewModel.Path
  id: Path
  parent: ComicBookInventory.Shared.ErrorViewModel
  langs:
  - csharp
  - vb
  name: Path
  nameWithType: ErrorViewModel.Path
  fullName: ComicBookInventory.Shared.ErrorViewModel.Path
  type: Property
  source:
    remote:
      path: src/ComicBookInventory.Domain/Entities/ViewModels/ErrorViewModel.cs
      branch: wip/extend-character-model
      repo: git@github.com:rnemeth90/ComicBookInventoryApp.git
    id: Path
    path: Entities/ViewModels/ErrorViewModel.cs
    startLine: 13
  assemblies:
  - ComicBookInventory.Domain
  namespace: ComicBookInventory.Shared
  syntax:
    content: public string Path { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Path As String
  overload: ComicBookInventory.Shared.ErrorViewModel.Path*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ComicBookInventory.Shared.ErrorViewModel.ToString
  commentId: M:ComicBookInventory.Shared.ErrorViewModel.ToString
  id: ToString
  parent: ComicBookInventory.Shared.ErrorViewModel
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ErrorViewModel.ToString()
  fullName: ComicBookInventory.Shared.ErrorViewModel.ToString()
  type: Method
  source:
    remote:
      path: src/ComicBookInventory.Domain/Entities/ViewModels/ErrorViewModel.cs
      branch: wip/extend-character-model
      repo: git@github.com:rnemeth90/ComicBookInventoryApp.git
    id: ToString
    path: Entities/ViewModels/ErrorViewModel.cs
    startLine: 15
  assemblies:
  - ComicBookInventory.Domain
  namespace: ComicBookInventory.Shared
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: ComicBookInventory.Shared.ErrorViewModel.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: ComicBookInventory.Shared
  commentId: N:ComicBookInventory.Shared
  name: ComicBookInventory.Shared
  nameWithType: ComicBookInventory.Shared
  fullName: ComicBookInventory.Shared
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: ComicBookInventory.Shared.ErrorViewModel.StatusCode*
  commentId: Overload:ComicBookInventory.Shared.ErrorViewModel.StatusCode
  name: StatusCode
  nameWithType: ErrorViewModel.StatusCode
  fullName: ComicBookInventory.Shared.ErrorViewModel.StatusCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: ComicBookInventory.Shared.ErrorViewModel.Message*
  commentId: Overload:ComicBookInventory.Shared.ErrorViewModel.Message
  name: Message
  nameWithType: ErrorViewModel.Message
  fullName: ComicBookInventory.Shared.ErrorViewModel.Message
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: ComicBookInventory.Shared.ErrorViewModel.Path*
  commentId: Overload:ComicBookInventory.Shared.ErrorViewModel.Path
  name: Path
  nameWithType: ErrorViewModel.Path
  fullName: ComicBookInventory.Shared.ErrorViewModel.Path
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: ComicBookInventory.Shared.ErrorViewModel.ToString*
  commentId: Overload:ComicBookInventory.Shared.ErrorViewModel.ToString
  name: ToString
  nameWithType: ErrorViewModel.ToString
  fullName: ComicBookInventory.Shared.ErrorViewModel.ToString

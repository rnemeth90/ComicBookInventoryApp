### YamlMime:ManagedReference
items:
- uid: ComicBookInventory.Shared.Author
  commentId: T:ComicBookInventory.Shared.Author
  id: Author
  parent: ComicBookInventory.Shared
  children:
  - ComicBookInventory.Shared.Author.ComicBook_Authors
  - ComicBookInventory.Shared.Author.FullName
  - ComicBookInventory.Shared.Author.Id
  langs:
  - csharp
  - vb
  name: Author
  nameWithType: Author
  fullName: ComicBookInventory.Shared.Author
  type: Class
  source:
    remote:
      path: src/ComicBookInventory.Domain/Entities/Author.cs
      branch: wip/extend-character-model
      repo: git@github.com:rnemeth90/ComicBookInventoryApp.git
    id: Author
    path: Entities/Author.cs
    startLine: 4
  assemblies:
  - ComicBookInventory.Domain
  namespace: ComicBookInventory.Shared
  syntax:
    content: 'public class Author : IAuthor'
    content.vb: >-
      Public Class Author
          Implements IAuthor
  inheritance:
  - System.Object
  implements:
  - ComicBookInventory.Shared.IAuthor
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: ComicBookInventory.Shared.Author.Id
  commentId: P:ComicBookInventory.Shared.Author.Id
  id: Id
  parent: ComicBookInventory.Shared.Author
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: Author.Id
  fullName: ComicBookInventory.Shared.Author.Id
  type: Property
  source:
    remote:
      path: src/ComicBookInventory.Domain/Entities/Author.cs
      branch: wip/extend-character-model
      repo: git@github.com:rnemeth90/ComicBookInventoryApp.git
    id: Id
    path: Entities/Author.cs
    startLine: 6
  assemblies:
  - ComicBookInventory.Domain
  namespace: ComicBookInventory.Shared
  syntax:
    content: public int Id { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Id As Integer
  overload: ComicBookInventory.Shared.Author.Id*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ComicBookInventory.Shared.Author.FullName
  commentId: P:ComicBookInventory.Shared.Author.FullName
  id: FullName
  parent: ComicBookInventory.Shared.Author
  langs:
  - csharp
  - vb
  name: FullName
  nameWithType: Author.FullName
  fullName: ComicBookInventory.Shared.Author.FullName
  type: Property
  source:
    remote:
      path: src/ComicBookInventory.Domain/Entities/Author.cs
      branch: wip/extend-character-model
      repo: git@github.com:rnemeth90/ComicBookInventoryApp.git
    id: FullName
    path: Entities/Author.cs
    startLine: 7
  assemblies:
  - ComicBookInventory.Domain
  namespace: ComicBookInventory.Shared
  syntax:
    content: public string FullName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property FullName As String
  overload: ComicBookInventory.Shared.Author.FullName*
  implements:
  - ComicBookInventory.Shared.IAuthor.FullName
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ComicBookInventory.Shared.Author.ComicBook_Authors
  commentId: P:ComicBookInventory.Shared.Author.ComicBook_Authors
  id: ComicBook_Authors
  parent: ComicBookInventory.Shared.Author
  langs:
  - csharp
  - vb
  name: ComicBook_Authors
  nameWithType: Author.ComicBook_Authors
  fullName: ComicBookInventory.Shared.Author.ComicBook_Authors
  type: Property
  source:
    remote:
      path: src/ComicBookInventory.Domain/Entities/Author.cs
      branch: wip/extend-character-model
      repo: git@github.com:rnemeth90/ComicBookInventoryApp.git
    id: ComicBook_Authors
    path: Entities/Author.cs
    startLine: 10
  assemblies:
  - ComicBookInventory.Domain
  namespace: ComicBookInventory.Shared
  syntax:
    content: >-
      [JsonIgnore]

      public ICollection<ComicBook_Author> ComicBook_Authors { get; set; }
    parameters: []
    return:
      type: ICollection{ComicBookInventory.Shared.ComicBook_Author}
    content.vb: >-
      <JsonIgnore>

      Public Property ComicBook_Authors As ICollection(Of ComicBook_Author)
  overload: ComicBookInventory.Shared.Author.ComicBook_Authors*
  attributes:
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: ComicBookInventory.Shared
  commentId: N:ComicBookInventory.Shared
  name: ComicBookInventory.Shared
  nameWithType: ComicBookInventory.Shared
  fullName: ComicBookInventory.Shared
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: ComicBookInventory.Shared.IAuthor
  commentId: T:ComicBookInventory.Shared.IAuthor
  parent: ComicBookInventory.Shared
  name: IAuthor
  nameWithType: IAuthor
  fullName: ComicBookInventory.Shared.IAuthor
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: ComicBookInventory.Shared.Author.Id*
  commentId: Overload:ComicBookInventory.Shared.Author.Id
  name: Id
  nameWithType: Author.Id
  fullName: ComicBookInventory.Shared.Author.Id
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: ComicBookInventory.Shared.Author.FullName*
  commentId: Overload:ComicBookInventory.Shared.Author.FullName
  name: FullName
  nameWithType: Author.FullName
  fullName: ComicBookInventory.Shared.Author.FullName
- uid: ComicBookInventory.Shared.IAuthor.FullName
  commentId: P:ComicBookInventory.Shared.IAuthor.FullName
  parent: ComicBookInventory.Shared.IAuthor
  name: FullName
  nameWithType: IAuthor.FullName
  fullName: ComicBookInventory.Shared.IAuthor.FullName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: ComicBookInventory.Shared.Author.ComicBook_Authors*
  commentId: Overload:ComicBookInventory.Shared.Author.ComicBook_Authors
  name: ComicBook_Authors
  nameWithType: Author.ComicBook_Authors
  fullName: ComicBookInventory.Shared.Author.ComicBook_Authors
- uid: ICollection{ComicBookInventory.Shared.ComicBook_Author}
  commentId: '!:ICollection{ComicBookInventory.Shared.ComicBook_Author}'
  definition: ICollection`1
  name: ICollection<ComicBook_Author>
  nameWithType: ICollection<ComicBook_Author>
  fullName: ICollection<ComicBookInventory.Shared.ComicBook_Author>
  nameWithType.vb: ICollection(Of ComicBook_Author)
  fullName.vb: ICollection(Of ComicBookInventory.Shared.ComicBook_Author)
  name.vb: ICollection(Of ComicBook_Author)
  spec.csharp:
  - uid: ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: ComicBookInventory.Shared.ComicBook_Author
    name: ComicBook_Author
    nameWithType: ComicBook_Author
    fullName: ComicBookInventory.Shared.ComicBook_Author
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: ComicBookInventory.Shared.ComicBook_Author
    name: ComicBook_Author
    nameWithType: ComicBook_Author
    fullName: ComicBookInventory.Shared.ComicBook_Author
  - name: )
    nameWithType: )
    fullName: )
- uid: ICollection`1
  isExternal: true
  name: ICollection<>
  nameWithType: ICollection<>
  fullName: ICollection<>
  nameWithType.vb: ICollection(Of )
  fullName.vb: ICollection(Of )
  name.vb: ICollection(Of )
  spec.csharp:
  - uid: ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )

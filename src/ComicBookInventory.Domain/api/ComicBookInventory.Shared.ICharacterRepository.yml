### YamlMime:ManagedReference
items:
- uid: ComicBookInventory.Shared.ICharacterRepository
  commentId: T:ComicBookInventory.Shared.ICharacterRepository
  id: ICharacterRepository
  parent: ComicBookInventory.Shared
  children:
  - ComicBookInventory.Shared.ICharacterRepository.AddCharacter(ComicBookInventory.Shared.CharacterViewModel)
  - ComicBookInventory.Shared.ICharacterRepository.GetCharacterById(System.Int32)
  - ComicBookInventory.Shared.ICharacterRepository.UpdateCharacter(System.Int32,ComicBookInventory.Shared.CharacterViewModel)
  langs:
  - csharp
  - vb
  name: ICharacterRepository
  nameWithType: ICharacterRepository
  fullName: ComicBookInventory.Shared.ICharacterRepository
  type: Interface
  source:
    remote:
      path: src/ComicBookInventory.Domain/Interfaces/ICharacterRepository.cs
      branch: wip/extend-character-model
      repo: git@github.com:rnemeth90/ComicBookInventoryApp.git
    id: ICharacterRepository
    path: Interfaces/ICharacterRepository.cs
    startLine: 2
  assemblies:
  - ComicBookInventory.Domain
  namespace: ComicBookInventory.Shared
  syntax:
    content: 'public interface ICharacterRepository : IGenericRepository<Character>'
    content.vb: >-
      Public Interface ICharacterRepository
          Inherits IGenericRepository(Of Character)
  inheritedMembers:
  - ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.Character}.GetAll
  - ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.Character}.GetWhere(System.Linq.Expressions.Expression{Func{ComicBookInventory.Shared.Character,System.Boolean}})
  - ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.Character}.Find(System.Linq.Expressions.Expression{Func{ComicBookInventory.Shared.Character,System.Boolean}})
  - ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.Character}.Add(ComicBookInventory.Shared.Character)
  - ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.Character}.AddRange(IEnumerable{ComicBookInventory.Shared.Character})
  - ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.Character}.Update(ComicBookInventory.Shared.Character)
  - ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.Character}.UpdateRange(IEnumerable{ComicBookInventory.Shared.Character})
  - ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.Character}.Remove(ComicBookInventory.Shared.Character)
  - ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.Character}.RemoveById(System.Int32)
  - ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.Character}.RemoveWhere(System.Linq.Expressions.Expression{Func{ComicBookInventory.Shared.Character,System.Boolean}})
  - ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.Character}.RemoveRange(IEnumerable{ComicBookInventory.Shared.Character})
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: ComicBookInventory.Shared.ICharacterRepository.GetCharacterById(System.Int32)
  commentId: M:ComicBookInventory.Shared.ICharacterRepository.GetCharacterById(System.Int32)
  id: GetCharacterById(System.Int32)
  parent: ComicBookInventory.Shared.ICharacterRepository
  langs:
  - csharp
  - vb
  name: GetCharacterById(Int32)
  nameWithType: ICharacterRepository.GetCharacterById(Int32)
  fullName: ComicBookInventory.Shared.ICharacterRepository.GetCharacterById(System.Int32)
  type: Method
  source:
    remote:
      path: src/ComicBookInventory.Domain/Interfaces/ICharacterRepository.cs
      branch: wip/extend-character-model
      repo: git@github.com:rnemeth90/ComicBookInventoryApp.git
    id: GetCharacterById
    path: Interfaces/ICharacterRepository.cs
    startLine: 4
  assemblies:
  - ComicBookInventory.Domain
  namespace: ComicBookInventory.Shared
  syntax:
    content: CharacterViewModel GetCharacterById(int id)
    parameters:
    - id: id
      type: System.Int32
    return:
      type: ComicBookInventory.Shared.CharacterViewModel
    content.vb: Function GetCharacterById(id As Integer) As CharacterViewModel
  overload: ComicBookInventory.Shared.ICharacterRepository.GetCharacterById*
- uid: ComicBookInventory.Shared.ICharacterRepository.AddCharacter(ComicBookInventory.Shared.CharacterViewModel)
  commentId: M:ComicBookInventory.Shared.ICharacterRepository.AddCharacter(ComicBookInventory.Shared.CharacterViewModel)
  id: AddCharacter(ComicBookInventory.Shared.CharacterViewModel)
  parent: ComicBookInventory.Shared.ICharacterRepository
  langs:
  - csharp
  - vb
  name: AddCharacter(CharacterViewModel)
  nameWithType: ICharacterRepository.AddCharacter(CharacterViewModel)
  fullName: ComicBookInventory.Shared.ICharacterRepository.AddCharacter(ComicBookInventory.Shared.CharacterViewModel)
  type: Method
  source:
    remote:
      path: src/ComicBookInventory.Domain/Interfaces/ICharacterRepository.cs
      branch: wip/extend-character-model
      repo: git@github.com:rnemeth90/ComicBookInventoryApp.git
    id: AddCharacter
    path: Interfaces/ICharacterRepository.cs
    startLine: 5
  assemblies:
  - ComicBookInventory.Domain
  namespace: ComicBookInventory.Shared
  syntax:
    content: void AddCharacter(CharacterViewModel character)
    parameters:
    - id: character
      type: ComicBookInventory.Shared.CharacterViewModel
    content.vb: Sub AddCharacter(character As CharacterViewModel)
  overload: ComicBookInventory.Shared.ICharacterRepository.AddCharacter*
- uid: ComicBookInventory.Shared.ICharacterRepository.UpdateCharacter(System.Int32,ComicBookInventory.Shared.CharacterViewModel)
  commentId: M:ComicBookInventory.Shared.ICharacterRepository.UpdateCharacter(System.Int32,ComicBookInventory.Shared.CharacterViewModel)
  id: UpdateCharacter(System.Int32,ComicBookInventory.Shared.CharacterViewModel)
  parent: ComicBookInventory.Shared.ICharacterRepository
  langs:
  - csharp
  - vb
  name: UpdateCharacter(Int32, CharacterViewModel)
  nameWithType: ICharacterRepository.UpdateCharacter(Int32, CharacterViewModel)
  fullName: ComicBookInventory.Shared.ICharacterRepository.UpdateCharacter(System.Int32, ComicBookInventory.Shared.CharacterViewModel)
  type: Method
  source:
    remote:
      path: src/ComicBookInventory.Domain/Interfaces/ICharacterRepository.cs
      branch: wip/extend-character-model
      repo: git@github.com:rnemeth90/ComicBookInventoryApp.git
    id: UpdateCharacter
    path: Interfaces/ICharacterRepository.cs
    startLine: 6
  assemblies:
  - ComicBookInventory.Domain
  namespace: ComicBookInventory.Shared
  syntax:
    content: void UpdateCharacter(int id, CharacterViewModel character)
    parameters:
    - id: id
      type: System.Int32
    - id: character
      type: ComicBookInventory.Shared.CharacterViewModel
    content.vb: Sub UpdateCharacter(id As Integer, character As CharacterViewModel)
  overload: ComicBookInventory.Shared.ICharacterRepository.UpdateCharacter*
references:
- uid: ComicBookInventory.Shared
  commentId: N:ComicBookInventory.Shared
  name: ComicBookInventory.Shared
  nameWithType: ComicBookInventory.Shared
  fullName: ComicBookInventory.Shared
- uid: ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.Character}.GetAll
  commentId: M:ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.Character}.GetAll
  parent: ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.Character}
  definition: ComicBookInventory.Shared.IGenericRepository`1.GetAll
  name: GetAll()
  nameWithType: IGenericRepository<Character>.GetAll()
  fullName: ComicBookInventory.Shared.IGenericRepository<ComicBookInventory.Shared.Character>.GetAll()
  nameWithType.vb: IGenericRepository(Of Character).GetAll()
  fullName.vb: ComicBookInventory.Shared.IGenericRepository(Of ComicBookInventory.Shared.Character).GetAll()
  spec.csharp:
  - uid: ComicBookInventory.Shared.IGenericRepository`1.GetAll
    name: GetAll
    nameWithType: IGenericRepository<Character>.GetAll
    fullName: ComicBookInventory.Shared.IGenericRepository<ComicBookInventory.Shared.Character>.GetAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ComicBookInventory.Shared.IGenericRepository`1.GetAll
    name: GetAll
    nameWithType: IGenericRepository(Of Character).GetAll
    fullName: ComicBookInventory.Shared.IGenericRepository(Of ComicBookInventory.Shared.Character).GetAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.Character}.GetWhere(System.Linq.Expressions.Expression{Func{ComicBookInventory.Shared.Character,System.Boolean}})
  commentId: M:ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.Character}.GetWhere(System.Linq.Expressions.Expression{Func{ComicBookInventory.Shared.Character,System.Boolean}})
  parent: ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.Character}
  definition: ComicBookInventory.Shared.IGenericRepository`1.GetWhere(System.Linq.Expressions.Expression{Func{`0,System.Boolean}})
  name: GetWhere(Expression<Func<Character, Boolean>>)
  nameWithType: IGenericRepository<Character>.GetWhere(Expression<Func<Character, Boolean>>)
  fullName: ComicBookInventory.Shared.IGenericRepository<ComicBookInventory.Shared.Character>.GetWhere(System.Linq.Expressions.Expression<Func<ComicBookInventory.Shared.Character, System.Boolean>>)
  nameWithType.vb: IGenericRepository(Of Character).GetWhere(Expression(Of Func(Of Character, Boolean)))
  fullName.vb: ComicBookInventory.Shared.IGenericRepository(Of ComicBookInventory.Shared.Character).GetWhere(System.Linq.Expressions.Expression(Of Func(Of ComicBookInventory.Shared.Character, System.Boolean)))
  name.vb: GetWhere(Expression(Of Func(Of Character, Boolean)))
  spec.csharp:
  - uid: ComicBookInventory.Shared.IGenericRepository`1.GetWhere(System.Linq.Expressions.Expression{Func{`0,System.Boolean}})
    name: GetWhere
    nameWithType: IGenericRepository<Character>.GetWhere
    fullName: ComicBookInventory.Shared.IGenericRepository<ComicBookInventory.Shared.Character>.GetWhere
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: ComicBookInventory.Shared.Character
    name: Character
    nameWithType: Character
    fullName: ComicBookInventory.Shared.Character
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ComicBookInventory.Shared.IGenericRepository`1.GetWhere(System.Linq.Expressions.Expression{Func{`0,System.Boolean}})
    name: GetWhere
    nameWithType: IGenericRepository(Of Character).GetWhere
    fullName: ComicBookInventory.Shared.IGenericRepository(Of ComicBookInventory.Shared.Character).GetWhere
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: ComicBookInventory.Shared.Character
    name: Character
    nameWithType: Character
    fullName: ComicBookInventory.Shared.Character
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.Character}.Find(System.Linq.Expressions.Expression{Func{ComicBookInventory.Shared.Character,System.Boolean}})
  commentId: M:ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.Character}.Find(System.Linq.Expressions.Expression{Func{ComicBookInventory.Shared.Character,System.Boolean}})
  parent: ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.Character}
  definition: ComicBookInventory.Shared.IGenericRepository`1.Find(System.Linq.Expressions.Expression{Func{`0,System.Boolean}})
  name: Find(Expression<Func<Character, Boolean>>)
  nameWithType: IGenericRepository<Character>.Find(Expression<Func<Character, Boolean>>)
  fullName: ComicBookInventory.Shared.IGenericRepository<ComicBookInventory.Shared.Character>.Find(System.Linq.Expressions.Expression<Func<ComicBookInventory.Shared.Character, System.Boolean>>)
  nameWithType.vb: IGenericRepository(Of Character).Find(Expression(Of Func(Of Character, Boolean)))
  fullName.vb: ComicBookInventory.Shared.IGenericRepository(Of ComicBookInventory.Shared.Character).Find(System.Linq.Expressions.Expression(Of Func(Of ComicBookInventory.Shared.Character, System.Boolean)))
  name.vb: Find(Expression(Of Func(Of Character, Boolean)))
  spec.csharp:
  - uid: ComicBookInventory.Shared.IGenericRepository`1.Find(System.Linq.Expressions.Expression{Func{`0,System.Boolean}})
    name: Find
    nameWithType: IGenericRepository<Character>.Find
    fullName: ComicBookInventory.Shared.IGenericRepository<ComicBookInventory.Shared.Character>.Find
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: ComicBookInventory.Shared.Character
    name: Character
    nameWithType: Character
    fullName: ComicBookInventory.Shared.Character
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ComicBookInventory.Shared.IGenericRepository`1.Find(System.Linq.Expressions.Expression{Func{`0,System.Boolean}})
    name: Find
    nameWithType: IGenericRepository(Of Character).Find
    fullName: ComicBookInventory.Shared.IGenericRepository(Of ComicBookInventory.Shared.Character).Find
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: ComicBookInventory.Shared.Character
    name: Character
    nameWithType: Character
    fullName: ComicBookInventory.Shared.Character
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.Character}.Add(ComicBookInventory.Shared.Character)
  commentId: M:ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.Character}.Add(ComicBookInventory.Shared.Character)
  parent: ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.Character}
  definition: ComicBookInventory.Shared.IGenericRepository`1.Add(`0)
  name: Add(Character)
  nameWithType: IGenericRepository<Character>.Add(Character)
  fullName: ComicBookInventory.Shared.IGenericRepository<ComicBookInventory.Shared.Character>.Add(ComicBookInventory.Shared.Character)
  nameWithType.vb: IGenericRepository(Of Character).Add(Character)
  fullName.vb: ComicBookInventory.Shared.IGenericRepository(Of ComicBookInventory.Shared.Character).Add(ComicBookInventory.Shared.Character)
  spec.csharp:
  - uid: ComicBookInventory.Shared.IGenericRepository`1.Add(`0)
    name: Add
    nameWithType: IGenericRepository<Character>.Add
    fullName: ComicBookInventory.Shared.IGenericRepository<ComicBookInventory.Shared.Character>.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: ComicBookInventory.Shared.Character
    name: Character
    nameWithType: Character
    fullName: ComicBookInventory.Shared.Character
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ComicBookInventory.Shared.IGenericRepository`1.Add(`0)
    name: Add
    nameWithType: IGenericRepository(Of Character).Add
    fullName: ComicBookInventory.Shared.IGenericRepository(Of ComicBookInventory.Shared.Character).Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: ComicBookInventory.Shared.Character
    name: Character
    nameWithType: Character
    fullName: ComicBookInventory.Shared.Character
  - name: )
    nameWithType: )
    fullName: )
- uid: ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.Character}.AddRange(IEnumerable{ComicBookInventory.Shared.Character})
  commentId: M:ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.Character}.AddRange(IEnumerable{ComicBookInventory.Shared.Character})
  parent: ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.Character}
  definition: ComicBookInventory.Shared.IGenericRepository`1.AddRange(IEnumerable{`0})
  name: AddRange(IEnumerable<Character>)
  nameWithType: IGenericRepository<Character>.AddRange(IEnumerable<Character>)
  fullName: ComicBookInventory.Shared.IGenericRepository<ComicBookInventory.Shared.Character>.AddRange(IEnumerable<ComicBookInventory.Shared.Character>)
  nameWithType.vb: IGenericRepository(Of Character).AddRange(IEnumerable(Of Character))
  fullName.vb: ComicBookInventory.Shared.IGenericRepository(Of ComicBookInventory.Shared.Character).AddRange(IEnumerable(Of ComicBookInventory.Shared.Character))
  name.vb: AddRange(IEnumerable(Of Character))
  spec.csharp:
  - uid: ComicBookInventory.Shared.IGenericRepository`1.AddRange(IEnumerable{`0})
    name: AddRange
    nameWithType: IGenericRepository<Character>.AddRange
    fullName: ComicBookInventory.Shared.IGenericRepository<ComicBookInventory.Shared.Character>.AddRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: ComicBookInventory.Shared.Character
    name: Character
    nameWithType: Character
    fullName: ComicBookInventory.Shared.Character
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ComicBookInventory.Shared.IGenericRepository`1.AddRange(IEnumerable{`0})
    name: AddRange
    nameWithType: IGenericRepository(Of Character).AddRange
    fullName: ComicBookInventory.Shared.IGenericRepository(Of ComicBookInventory.Shared.Character).AddRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: ComicBookInventory.Shared.Character
    name: Character
    nameWithType: Character
    fullName: ComicBookInventory.Shared.Character
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.Character}.Update(ComicBookInventory.Shared.Character)
  commentId: M:ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.Character}.Update(ComicBookInventory.Shared.Character)
  parent: ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.Character}
  definition: ComicBookInventory.Shared.IGenericRepository`1.Update(`0)
  name: Update(Character)
  nameWithType: IGenericRepository<Character>.Update(Character)
  fullName: ComicBookInventory.Shared.IGenericRepository<ComicBookInventory.Shared.Character>.Update(ComicBookInventory.Shared.Character)
  nameWithType.vb: IGenericRepository(Of Character).Update(Character)
  fullName.vb: ComicBookInventory.Shared.IGenericRepository(Of ComicBookInventory.Shared.Character).Update(ComicBookInventory.Shared.Character)
  spec.csharp:
  - uid: ComicBookInventory.Shared.IGenericRepository`1.Update(`0)
    name: Update
    nameWithType: IGenericRepository<Character>.Update
    fullName: ComicBookInventory.Shared.IGenericRepository<ComicBookInventory.Shared.Character>.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: ComicBookInventory.Shared.Character
    name: Character
    nameWithType: Character
    fullName: ComicBookInventory.Shared.Character
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ComicBookInventory.Shared.IGenericRepository`1.Update(`0)
    name: Update
    nameWithType: IGenericRepository(Of Character).Update
    fullName: ComicBookInventory.Shared.IGenericRepository(Of ComicBookInventory.Shared.Character).Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: ComicBookInventory.Shared.Character
    name: Character
    nameWithType: Character
    fullName: ComicBookInventory.Shared.Character
  - name: )
    nameWithType: )
    fullName: )
- uid: ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.Character}.UpdateRange(IEnumerable{ComicBookInventory.Shared.Character})
  commentId: M:ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.Character}.UpdateRange(IEnumerable{ComicBookInventory.Shared.Character})
  parent: ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.Character}
  definition: ComicBookInventory.Shared.IGenericRepository`1.UpdateRange(IEnumerable{`0})
  name: UpdateRange(IEnumerable<Character>)
  nameWithType: IGenericRepository<Character>.UpdateRange(IEnumerable<Character>)
  fullName: ComicBookInventory.Shared.IGenericRepository<ComicBookInventory.Shared.Character>.UpdateRange(IEnumerable<ComicBookInventory.Shared.Character>)
  nameWithType.vb: IGenericRepository(Of Character).UpdateRange(IEnumerable(Of Character))
  fullName.vb: ComicBookInventory.Shared.IGenericRepository(Of ComicBookInventory.Shared.Character).UpdateRange(IEnumerable(Of ComicBookInventory.Shared.Character))
  name.vb: UpdateRange(IEnumerable(Of Character))
  spec.csharp:
  - uid: ComicBookInventory.Shared.IGenericRepository`1.UpdateRange(IEnumerable{`0})
    name: UpdateRange
    nameWithType: IGenericRepository<Character>.UpdateRange
    fullName: ComicBookInventory.Shared.IGenericRepository<ComicBookInventory.Shared.Character>.UpdateRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: ComicBookInventory.Shared.Character
    name: Character
    nameWithType: Character
    fullName: ComicBookInventory.Shared.Character
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ComicBookInventory.Shared.IGenericRepository`1.UpdateRange(IEnumerable{`0})
    name: UpdateRange
    nameWithType: IGenericRepository(Of Character).UpdateRange
    fullName: ComicBookInventory.Shared.IGenericRepository(Of ComicBookInventory.Shared.Character).UpdateRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: ComicBookInventory.Shared.Character
    name: Character
    nameWithType: Character
    fullName: ComicBookInventory.Shared.Character
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.Character}.Remove(ComicBookInventory.Shared.Character)
  commentId: M:ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.Character}.Remove(ComicBookInventory.Shared.Character)
  parent: ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.Character}
  definition: ComicBookInventory.Shared.IGenericRepository`1.Remove(`0)
  name: Remove(Character)
  nameWithType: IGenericRepository<Character>.Remove(Character)
  fullName: ComicBookInventory.Shared.IGenericRepository<ComicBookInventory.Shared.Character>.Remove(ComicBookInventory.Shared.Character)
  nameWithType.vb: IGenericRepository(Of Character).Remove(Character)
  fullName.vb: ComicBookInventory.Shared.IGenericRepository(Of ComicBookInventory.Shared.Character).Remove(ComicBookInventory.Shared.Character)
  spec.csharp:
  - uid: ComicBookInventory.Shared.IGenericRepository`1.Remove(`0)
    name: Remove
    nameWithType: IGenericRepository<Character>.Remove
    fullName: ComicBookInventory.Shared.IGenericRepository<ComicBookInventory.Shared.Character>.Remove
  - name: (
    nameWithType: (
    fullName: (
  - uid: ComicBookInventory.Shared.Character
    name: Character
    nameWithType: Character
    fullName: ComicBookInventory.Shared.Character
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ComicBookInventory.Shared.IGenericRepository`1.Remove(`0)
    name: Remove
    nameWithType: IGenericRepository(Of Character).Remove
    fullName: ComicBookInventory.Shared.IGenericRepository(Of ComicBookInventory.Shared.Character).Remove
  - name: (
    nameWithType: (
    fullName: (
  - uid: ComicBookInventory.Shared.Character
    name: Character
    nameWithType: Character
    fullName: ComicBookInventory.Shared.Character
  - name: )
    nameWithType: )
    fullName: )
- uid: ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.Character}.RemoveById(System.Int32)
  commentId: M:ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.Character}.RemoveById(System.Int32)
  parent: ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.Character}
  definition: ComicBookInventory.Shared.IGenericRepository`1.RemoveById(System.Int32)
  name: RemoveById(Int32)
  nameWithType: IGenericRepository<Character>.RemoveById(Int32)
  fullName: ComicBookInventory.Shared.IGenericRepository<ComicBookInventory.Shared.Character>.RemoveById(System.Int32)
  nameWithType.vb: IGenericRepository(Of Character).RemoveById(Int32)
  fullName.vb: ComicBookInventory.Shared.IGenericRepository(Of ComicBookInventory.Shared.Character).RemoveById(System.Int32)
  spec.csharp:
  - uid: ComicBookInventory.Shared.IGenericRepository`1.RemoveById(System.Int32)
    name: RemoveById
    nameWithType: IGenericRepository<Character>.RemoveById
    fullName: ComicBookInventory.Shared.IGenericRepository<ComicBookInventory.Shared.Character>.RemoveById
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ComicBookInventory.Shared.IGenericRepository`1.RemoveById(System.Int32)
    name: RemoveById
    nameWithType: IGenericRepository(Of Character).RemoveById
    fullName: ComicBookInventory.Shared.IGenericRepository(Of ComicBookInventory.Shared.Character).RemoveById
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.Character}.RemoveWhere(System.Linq.Expressions.Expression{Func{ComicBookInventory.Shared.Character,System.Boolean}})
  commentId: M:ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.Character}.RemoveWhere(System.Linq.Expressions.Expression{Func{ComicBookInventory.Shared.Character,System.Boolean}})
  parent: ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.Character}
  definition: ComicBookInventory.Shared.IGenericRepository`1.RemoveWhere(System.Linq.Expressions.Expression{Func{`0,System.Boolean}})
  name: RemoveWhere(Expression<Func<Character, Boolean>>)
  nameWithType: IGenericRepository<Character>.RemoveWhere(Expression<Func<Character, Boolean>>)
  fullName: ComicBookInventory.Shared.IGenericRepository<ComicBookInventory.Shared.Character>.RemoveWhere(System.Linq.Expressions.Expression<Func<ComicBookInventory.Shared.Character, System.Boolean>>)
  nameWithType.vb: IGenericRepository(Of Character).RemoveWhere(Expression(Of Func(Of Character, Boolean)))
  fullName.vb: ComicBookInventory.Shared.IGenericRepository(Of ComicBookInventory.Shared.Character).RemoveWhere(System.Linq.Expressions.Expression(Of Func(Of ComicBookInventory.Shared.Character, System.Boolean)))
  name.vb: RemoveWhere(Expression(Of Func(Of Character, Boolean)))
  spec.csharp:
  - uid: ComicBookInventory.Shared.IGenericRepository`1.RemoveWhere(System.Linq.Expressions.Expression{Func{`0,System.Boolean}})
    name: RemoveWhere
    nameWithType: IGenericRepository<Character>.RemoveWhere
    fullName: ComicBookInventory.Shared.IGenericRepository<ComicBookInventory.Shared.Character>.RemoveWhere
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: ComicBookInventory.Shared.Character
    name: Character
    nameWithType: Character
    fullName: ComicBookInventory.Shared.Character
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ComicBookInventory.Shared.IGenericRepository`1.RemoveWhere(System.Linq.Expressions.Expression{Func{`0,System.Boolean}})
    name: RemoveWhere
    nameWithType: IGenericRepository(Of Character).RemoveWhere
    fullName: ComicBookInventory.Shared.IGenericRepository(Of ComicBookInventory.Shared.Character).RemoveWhere
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: ComicBookInventory.Shared.Character
    name: Character
    nameWithType: Character
    fullName: ComicBookInventory.Shared.Character
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.Character}.RemoveRange(IEnumerable{ComicBookInventory.Shared.Character})
  commentId: M:ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.Character}.RemoveRange(IEnumerable{ComicBookInventory.Shared.Character})
  parent: ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.Character}
  definition: ComicBookInventory.Shared.IGenericRepository`1.RemoveRange(IEnumerable{`0})
  name: RemoveRange(IEnumerable<Character>)
  nameWithType: IGenericRepository<Character>.RemoveRange(IEnumerable<Character>)
  fullName: ComicBookInventory.Shared.IGenericRepository<ComicBookInventory.Shared.Character>.RemoveRange(IEnumerable<ComicBookInventory.Shared.Character>)
  nameWithType.vb: IGenericRepository(Of Character).RemoveRange(IEnumerable(Of Character))
  fullName.vb: ComicBookInventory.Shared.IGenericRepository(Of ComicBookInventory.Shared.Character).RemoveRange(IEnumerable(Of ComicBookInventory.Shared.Character))
  name.vb: RemoveRange(IEnumerable(Of Character))
  spec.csharp:
  - uid: ComicBookInventory.Shared.IGenericRepository`1.RemoveRange(IEnumerable{`0})
    name: RemoveRange
    nameWithType: IGenericRepository<Character>.RemoveRange
    fullName: ComicBookInventory.Shared.IGenericRepository<ComicBookInventory.Shared.Character>.RemoveRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: ComicBookInventory.Shared.Character
    name: Character
    nameWithType: Character
    fullName: ComicBookInventory.Shared.Character
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ComicBookInventory.Shared.IGenericRepository`1.RemoveRange(IEnumerable{`0})
    name: RemoveRange
    nameWithType: IGenericRepository(Of Character).RemoveRange
    fullName: ComicBookInventory.Shared.IGenericRepository(Of ComicBookInventory.Shared.Character).RemoveRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: ComicBookInventory.Shared.Character
    name: Character
    nameWithType: Character
    fullName: ComicBookInventory.Shared.Character
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: ComicBookInventory.Shared.IGenericRepository`1.GetAll
  commentId: M:ComicBookInventory.Shared.IGenericRepository`1.GetAll
  name: GetAll()
  nameWithType: IGenericRepository<T>.GetAll()
  fullName: ComicBookInventory.Shared.IGenericRepository<T>.GetAll()
  nameWithType.vb: IGenericRepository(Of T).GetAll()
  fullName.vb: ComicBookInventory.Shared.IGenericRepository(Of T).GetAll()
  spec.csharp:
  - uid: ComicBookInventory.Shared.IGenericRepository`1.GetAll
    name: GetAll
    nameWithType: IGenericRepository<T>.GetAll
    fullName: ComicBookInventory.Shared.IGenericRepository<T>.GetAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ComicBookInventory.Shared.IGenericRepository`1.GetAll
    name: GetAll
    nameWithType: IGenericRepository(Of T).GetAll
    fullName: ComicBookInventory.Shared.IGenericRepository(Of T).GetAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.Character}
  commentId: T:ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.Character}
  parent: ComicBookInventory.Shared
  definition: ComicBookInventory.Shared.IGenericRepository`1
  name: IGenericRepository<Character>
  nameWithType: IGenericRepository<Character>
  fullName: ComicBookInventory.Shared.IGenericRepository<ComicBookInventory.Shared.Character>
  nameWithType.vb: IGenericRepository(Of Character)
  fullName.vb: ComicBookInventory.Shared.IGenericRepository(Of ComicBookInventory.Shared.Character)
  name.vb: IGenericRepository(Of Character)
  spec.csharp:
  - uid: ComicBookInventory.Shared.IGenericRepository`1
    name: IGenericRepository
    nameWithType: IGenericRepository
    fullName: ComicBookInventory.Shared.IGenericRepository
  - name: <
    nameWithType: <
    fullName: <
  - uid: ComicBookInventory.Shared.Character
    name: Character
    nameWithType: Character
    fullName: ComicBookInventory.Shared.Character
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ComicBookInventory.Shared.IGenericRepository`1
    name: IGenericRepository
    nameWithType: IGenericRepository
    fullName: ComicBookInventory.Shared.IGenericRepository
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: ComicBookInventory.Shared.Character
    name: Character
    nameWithType: Character
    fullName: ComicBookInventory.Shared.Character
  - name: )
    nameWithType: )
    fullName: )
- uid: ComicBookInventory.Shared.IGenericRepository`1.GetWhere(System.Linq.Expressions.Expression{Func{`0,System.Boolean}})
  commentId: M:ComicBookInventory.Shared.IGenericRepository`1.GetWhere(System.Linq.Expressions.Expression{Func{`0,System.Boolean}})
  isExternal: true
  name: GetWhere(Expression<Func<T, Boolean>>)
  nameWithType: IGenericRepository<T>.GetWhere(Expression<Func<T, Boolean>>)
  fullName: ComicBookInventory.Shared.IGenericRepository<T>.GetWhere(System.Linq.Expressions.Expression<Func<T, System.Boolean>>)
  nameWithType.vb: IGenericRepository(Of T).GetWhere(Expression(Of Func(Of T, Boolean)))
  fullName.vb: ComicBookInventory.Shared.IGenericRepository(Of T).GetWhere(System.Linq.Expressions.Expression(Of Func(Of T, System.Boolean)))
  name.vb: GetWhere(Expression(Of Func(Of T, Boolean)))
  spec.csharp:
  - uid: ComicBookInventory.Shared.IGenericRepository`1.GetWhere(System.Linq.Expressions.Expression{Func{`0,System.Boolean}})
    name: GetWhere
    nameWithType: IGenericRepository<T>.GetWhere
    fullName: ComicBookInventory.Shared.IGenericRepository<T>.GetWhere
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ComicBookInventory.Shared.IGenericRepository`1.GetWhere(System.Linq.Expressions.Expression{Func{`0,System.Boolean}})
    name: GetWhere
    nameWithType: IGenericRepository(Of T).GetWhere
    fullName: ComicBookInventory.Shared.IGenericRepository(Of T).GetWhere
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: ComicBookInventory.Shared.IGenericRepository`1.Find(System.Linq.Expressions.Expression{Func{`0,System.Boolean}})
  commentId: M:ComicBookInventory.Shared.IGenericRepository`1.Find(System.Linq.Expressions.Expression{Func{`0,System.Boolean}})
  isExternal: true
  name: Find(Expression<Func<T, Boolean>>)
  nameWithType: IGenericRepository<T>.Find(Expression<Func<T, Boolean>>)
  fullName: ComicBookInventory.Shared.IGenericRepository<T>.Find(System.Linq.Expressions.Expression<Func<T, System.Boolean>>)
  nameWithType.vb: IGenericRepository(Of T).Find(Expression(Of Func(Of T, Boolean)))
  fullName.vb: ComicBookInventory.Shared.IGenericRepository(Of T).Find(System.Linq.Expressions.Expression(Of Func(Of T, System.Boolean)))
  name.vb: Find(Expression(Of Func(Of T, Boolean)))
  spec.csharp:
  - uid: ComicBookInventory.Shared.IGenericRepository`1.Find(System.Linq.Expressions.Expression{Func{`0,System.Boolean}})
    name: Find
    nameWithType: IGenericRepository<T>.Find
    fullName: ComicBookInventory.Shared.IGenericRepository<T>.Find
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ComicBookInventory.Shared.IGenericRepository`1.Find(System.Linq.Expressions.Expression{Func{`0,System.Boolean}})
    name: Find
    nameWithType: IGenericRepository(Of T).Find
    fullName: ComicBookInventory.Shared.IGenericRepository(Of T).Find
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: ComicBookInventory.Shared.IGenericRepository`1.Add(`0)
  commentId: M:ComicBookInventory.Shared.IGenericRepository`1.Add(`0)
  name: Add(T)
  nameWithType: IGenericRepository<T>.Add(T)
  fullName: ComicBookInventory.Shared.IGenericRepository<T>.Add(T)
  nameWithType.vb: IGenericRepository(Of T).Add(T)
  fullName.vb: ComicBookInventory.Shared.IGenericRepository(Of T).Add(T)
  spec.csharp:
  - uid: ComicBookInventory.Shared.IGenericRepository`1.Add(`0)
    name: Add
    nameWithType: IGenericRepository<T>.Add
    fullName: ComicBookInventory.Shared.IGenericRepository<T>.Add
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ComicBookInventory.Shared.IGenericRepository`1.Add(`0)
    name: Add
    nameWithType: IGenericRepository(Of T).Add
    fullName: ComicBookInventory.Shared.IGenericRepository(Of T).Add
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: ComicBookInventory.Shared.IGenericRepository`1.AddRange(IEnumerable{`0})
  commentId: M:ComicBookInventory.Shared.IGenericRepository`1.AddRange(IEnumerable{`0})
  isExternal: true
  name: AddRange(IEnumerable<T>)
  nameWithType: IGenericRepository<T>.AddRange(IEnumerable<T>)
  fullName: ComicBookInventory.Shared.IGenericRepository<T>.AddRange(IEnumerable<T>)
  nameWithType.vb: IGenericRepository(Of T).AddRange(IEnumerable(Of T))
  fullName.vb: ComicBookInventory.Shared.IGenericRepository(Of T).AddRange(IEnumerable(Of T))
  name.vb: AddRange(IEnumerable(Of T))
  spec.csharp:
  - uid: ComicBookInventory.Shared.IGenericRepository`1.AddRange(IEnumerable{`0})
    name: AddRange
    nameWithType: IGenericRepository<T>.AddRange
    fullName: ComicBookInventory.Shared.IGenericRepository<T>.AddRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ComicBookInventory.Shared.IGenericRepository`1.AddRange(IEnumerable{`0})
    name: AddRange
    nameWithType: IGenericRepository(Of T).AddRange
    fullName: ComicBookInventory.Shared.IGenericRepository(Of T).AddRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: ComicBookInventory.Shared.IGenericRepository`1.Update(`0)
  commentId: M:ComicBookInventory.Shared.IGenericRepository`1.Update(`0)
  name: Update(T)
  nameWithType: IGenericRepository<T>.Update(T)
  fullName: ComicBookInventory.Shared.IGenericRepository<T>.Update(T)
  nameWithType.vb: IGenericRepository(Of T).Update(T)
  fullName.vb: ComicBookInventory.Shared.IGenericRepository(Of T).Update(T)
  spec.csharp:
  - uid: ComicBookInventory.Shared.IGenericRepository`1.Update(`0)
    name: Update
    nameWithType: IGenericRepository<T>.Update
    fullName: ComicBookInventory.Shared.IGenericRepository<T>.Update
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ComicBookInventory.Shared.IGenericRepository`1.Update(`0)
    name: Update
    nameWithType: IGenericRepository(Of T).Update
    fullName: ComicBookInventory.Shared.IGenericRepository(Of T).Update
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: ComicBookInventory.Shared.IGenericRepository`1.UpdateRange(IEnumerable{`0})
  commentId: M:ComicBookInventory.Shared.IGenericRepository`1.UpdateRange(IEnumerable{`0})
  isExternal: true
  name: UpdateRange(IEnumerable<T>)
  nameWithType: IGenericRepository<T>.UpdateRange(IEnumerable<T>)
  fullName: ComicBookInventory.Shared.IGenericRepository<T>.UpdateRange(IEnumerable<T>)
  nameWithType.vb: IGenericRepository(Of T).UpdateRange(IEnumerable(Of T))
  fullName.vb: ComicBookInventory.Shared.IGenericRepository(Of T).UpdateRange(IEnumerable(Of T))
  name.vb: UpdateRange(IEnumerable(Of T))
  spec.csharp:
  - uid: ComicBookInventory.Shared.IGenericRepository`1.UpdateRange(IEnumerable{`0})
    name: UpdateRange
    nameWithType: IGenericRepository<T>.UpdateRange
    fullName: ComicBookInventory.Shared.IGenericRepository<T>.UpdateRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ComicBookInventory.Shared.IGenericRepository`1.UpdateRange(IEnumerable{`0})
    name: UpdateRange
    nameWithType: IGenericRepository(Of T).UpdateRange
    fullName: ComicBookInventory.Shared.IGenericRepository(Of T).UpdateRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: ComicBookInventory.Shared.IGenericRepository`1.Remove(`0)
  commentId: M:ComicBookInventory.Shared.IGenericRepository`1.Remove(`0)
  name: Remove(T)
  nameWithType: IGenericRepository<T>.Remove(T)
  fullName: ComicBookInventory.Shared.IGenericRepository<T>.Remove(T)
  nameWithType.vb: IGenericRepository(Of T).Remove(T)
  fullName.vb: ComicBookInventory.Shared.IGenericRepository(Of T).Remove(T)
  spec.csharp:
  - uid: ComicBookInventory.Shared.IGenericRepository`1.Remove(`0)
    name: Remove
    nameWithType: IGenericRepository<T>.Remove
    fullName: ComicBookInventory.Shared.IGenericRepository<T>.Remove
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ComicBookInventory.Shared.IGenericRepository`1.Remove(`0)
    name: Remove
    nameWithType: IGenericRepository(Of T).Remove
    fullName: ComicBookInventory.Shared.IGenericRepository(Of T).Remove
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: ComicBookInventory.Shared.IGenericRepository`1.RemoveById(System.Int32)
  commentId: M:ComicBookInventory.Shared.IGenericRepository`1.RemoveById(System.Int32)
  isExternal: true
  name: RemoveById(Int32)
  nameWithType: IGenericRepository<T>.RemoveById(Int32)
  fullName: ComicBookInventory.Shared.IGenericRepository<T>.RemoveById(System.Int32)
  nameWithType.vb: IGenericRepository(Of T).RemoveById(Int32)
  fullName.vb: ComicBookInventory.Shared.IGenericRepository(Of T).RemoveById(System.Int32)
  spec.csharp:
  - uid: ComicBookInventory.Shared.IGenericRepository`1.RemoveById(System.Int32)
    name: RemoveById
    nameWithType: IGenericRepository<T>.RemoveById
    fullName: ComicBookInventory.Shared.IGenericRepository<T>.RemoveById
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ComicBookInventory.Shared.IGenericRepository`1.RemoveById(System.Int32)
    name: RemoveById
    nameWithType: IGenericRepository(Of T).RemoveById
    fullName: ComicBookInventory.Shared.IGenericRepository(Of T).RemoveById
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ComicBookInventory.Shared.IGenericRepository`1.RemoveWhere(System.Linq.Expressions.Expression{Func{`0,System.Boolean}})
  commentId: M:ComicBookInventory.Shared.IGenericRepository`1.RemoveWhere(System.Linq.Expressions.Expression{Func{`0,System.Boolean}})
  isExternal: true
  name: RemoveWhere(Expression<Func<T, Boolean>>)
  nameWithType: IGenericRepository<T>.RemoveWhere(Expression<Func<T, Boolean>>)
  fullName: ComicBookInventory.Shared.IGenericRepository<T>.RemoveWhere(System.Linq.Expressions.Expression<Func<T, System.Boolean>>)
  nameWithType.vb: IGenericRepository(Of T).RemoveWhere(Expression(Of Func(Of T, Boolean)))
  fullName.vb: ComicBookInventory.Shared.IGenericRepository(Of T).RemoveWhere(System.Linq.Expressions.Expression(Of Func(Of T, System.Boolean)))
  name.vb: RemoveWhere(Expression(Of Func(Of T, Boolean)))
  spec.csharp:
  - uid: ComicBookInventory.Shared.IGenericRepository`1.RemoveWhere(System.Linq.Expressions.Expression{Func{`0,System.Boolean}})
    name: RemoveWhere
    nameWithType: IGenericRepository<T>.RemoveWhere
    fullName: ComicBookInventory.Shared.IGenericRepository<T>.RemoveWhere
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ComicBookInventory.Shared.IGenericRepository`1.RemoveWhere(System.Linq.Expressions.Expression{Func{`0,System.Boolean}})
    name: RemoveWhere
    nameWithType: IGenericRepository(Of T).RemoveWhere
    fullName: ComicBookInventory.Shared.IGenericRepository(Of T).RemoveWhere
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: ComicBookInventory.Shared.IGenericRepository`1.RemoveRange(IEnumerable{`0})
  commentId: M:ComicBookInventory.Shared.IGenericRepository`1.RemoveRange(IEnumerable{`0})
  isExternal: true
  name: RemoveRange(IEnumerable<T>)
  nameWithType: IGenericRepository<T>.RemoveRange(IEnumerable<T>)
  fullName: ComicBookInventory.Shared.IGenericRepository<T>.RemoveRange(IEnumerable<T>)
  nameWithType.vb: IGenericRepository(Of T).RemoveRange(IEnumerable(Of T))
  fullName.vb: ComicBookInventory.Shared.IGenericRepository(Of T).RemoveRange(IEnumerable(Of T))
  name.vb: RemoveRange(IEnumerable(Of T))
  spec.csharp:
  - uid: ComicBookInventory.Shared.IGenericRepository`1.RemoveRange(IEnumerable{`0})
    name: RemoveRange
    nameWithType: IGenericRepository<T>.RemoveRange
    fullName: ComicBookInventory.Shared.IGenericRepository<T>.RemoveRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ComicBookInventory.Shared.IGenericRepository`1.RemoveRange(IEnumerable{`0})
    name: RemoveRange
    nameWithType: IGenericRepository(Of T).RemoveRange
    fullName: ComicBookInventory.Shared.IGenericRepository(Of T).RemoveRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: ComicBookInventory.Shared.IGenericRepository`1
  commentId: T:ComicBookInventory.Shared.IGenericRepository`1
  name: IGenericRepository<T>
  nameWithType: IGenericRepository<T>
  fullName: ComicBookInventory.Shared.IGenericRepository<T>
  nameWithType.vb: IGenericRepository(Of T)
  fullName.vb: ComicBookInventory.Shared.IGenericRepository(Of T)
  name.vb: IGenericRepository(Of T)
  spec.csharp:
  - uid: ComicBookInventory.Shared.IGenericRepository`1
    name: IGenericRepository
    nameWithType: IGenericRepository
    fullName: ComicBookInventory.Shared.IGenericRepository
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ComicBookInventory.Shared.IGenericRepository`1
    name: IGenericRepository
    nameWithType: IGenericRepository
    fullName: ComicBookInventory.Shared.IGenericRepository
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: ComicBookInventory.Shared.ICharacterRepository.GetCharacterById*
  commentId: Overload:ComicBookInventory.Shared.ICharacterRepository.GetCharacterById
  name: GetCharacterById
  nameWithType: ICharacterRepository.GetCharacterById
  fullName: ComicBookInventory.Shared.ICharacterRepository.GetCharacterById
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: ComicBookInventory.Shared.CharacterViewModel
  commentId: T:ComicBookInventory.Shared.CharacterViewModel
  parent: ComicBookInventory.Shared
  name: CharacterViewModel
  nameWithType: CharacterViewModel
  fullName: ComicBookInventory.Shared.CharacterViewModel
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: ComicBookInventory.Shared.ICharacterRepository.AddCharacter*
  commentId: Overload:ComicBookInventory.Shared.ICharacterRepository.AddCharacter
  name: AddCharacter
  nameWithType: ICharacterRepository.AddCharacter
  fullName: ComicBookInventory.Shared.ICharacterRepository.AddCharacter
- uid: ComicBookInventory.Shared.ICharacterRepository.UpdateCharacter*
  commentId: Overload:ComicBookInventory.Shared.ICharacterRepository.UpdateCharacter
  name: UpdateCharacter
  nameWithType: ICharacterRepository.UpdateCharacter
  fullName: ComicBookInventory.Shared.ICharacterRepository.UpdateCharacter

### YamlMime:ManagedReference
items:
- uid: ComicBookInventory.Shared.ComicBook_Author
  commentId: T:ComicBookInventory.Shared.ComicBook_Author
  id: ComicBook_Author
  parent: ComicBookInventory.Shared
  children:
  - ComicBookInventory.Shared.ComicBook_Author.Author
  - ComicBookInventory.Shared.ComicBook_Author.AuthorId
  - ComicBookInventory.Shared.ComicBook_Author.ComicBook
  - ComicBookInventory.Shared.ComicBook_Author.ComicBookId
  - ComicBookInventory.Shared.ComicBook_Author.Id
  langs:
  - csharp
  - vb
  name: ComicBook_Author
  nameWithType: ComicBook_Author
  fullName: ComicBookInventory.Shared.ComicBook_Author
  type: Class
  source:
    remote:
      path: src/ComicBookInventory.Domain/Entities/ComicBook_Author.cs
      branch: wip/extend-character-model
      repo: git@github.com:rnemeth90/ComicBookInventoryApp.git
    id: ComicBook_Author
    path: Entities/ComicBook_Author.cs
    startLine: 2
  assemblies:
  - ComicBookInventory.Domain
  namespace: ComicBookInventory.Shared
  syntax:
    content: public class ComicBook_Author
    content.vb: Public Class ComicBook_Author
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: ComicBookInventory.Shared.ComicBook_Author.Id
  commentId: P:ComicBookInventory.Shared.ComicBook_Author.Id
  id: Id
  parent: ComicBookInventory.Shared.ComicBook_Author
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: ComicBook_Author.Id
  fullName: ComicBookInventory.Shared.ComicBook_Author.Id
  type: Property
  source:
    remote:
      path: src/ComicBookInventory.Domain/Entities/ComicBook_Author.cs
      branch: wip/extend-character-model
      repo: git@github.com:rnemeth90/ComicBookInventoryApp.git
    id: Id
    path: Entities/ComicBook_Author.cs
    startLine: 4
  assemblies:
  - ComicBookInventory.Domain
  namespace: ComicBookInventory.Shared
  syntax:
    content: public int Id { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Id As Integer
  overload: ComicBookInventory.Shared.ComicBook_Author.Id*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ComicBookInventory.Shared.ComicBook_Author.ComicBookId
  commentId: P:ComicBookInventory.Shared.ComicBook_Author.ComicBookId
  id: ComicBookId
  parent: ComicBookInventory.Shared.ComicBook_Author
  langs:
  - csharp
  - vb
  name: ComicBookId
  nameWithType: ComicBook_Author.ComicBookId
  fullName: ComicBookInventory.Shared.ComicBook_Author.ComicBookId
  type: Property
  source:
    remote:
      path: src/ComicBookInventory.Domain/Entities/ComicBook_Author.cs
      branch: wip/extend-character-model
      repo: git@github.com:rnemeth90/ComicBookInventoryApp.git
    id: ComicBookId
    path: Entities/ComicBook_Author.cs
    startLine: 8
  assemblies:
  - ComicBookInventory.Domain
  namespace: ComicBookInventory.Shared
  syntax:
    content: public int? ComicBookId { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public Property ComicBookId As Integer?
  overload: ComicBookInventory.Shared.ComicBook_Author.ComicBookId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ComicBookInventory.Shared.ComicBook_Author.ComicBook
  commentId: P:ComicBookInventory.Shared.ComicBook_Author.ComicBook
  id: ComicBook
  parent: ComicBookInventory.Shared.ComicBook_Author
  langs:
  - csharp
  - vb
  name: ComicBook
  nameWithType: ComicBook_Author.ComicBook
  fullName: ComicBookInventory.Shared.ComicBook_Author.ComicBook
  type: Property
  source:
    remote:
      path: src/ComicBookInventory.Domain/Entities/ComicBook_Author.cs
      branch: wip/extend-character-model
      repo: git@github.com:rnemeth90/ComicBookInventoryApp.git
    id: ComicBook
    path: Entities/ComicBook_Author.cs
    startLine: 9
  assemblies:
  - ComicBookInventory.Domain
  namespace: ComicBookInventory.Shared
  syntax:
    content: public ComicBook ComicBook { get; set; }
    parameters: []
    return:
      type: ComicBookInventory.Shared.ComicBook
    content.vb: Public Property ComicBook As ComicBook
  overload: ComicBookInventory.Shared.ComicBook_Author.ComicBook*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ComicBookInventory.Shared.ComicBook_Author.AuthorId
  commentId: P:ComicBookInventory.Shared.ComicBook_Author.AuthorId
  id: AuthorId
  parent: ComicBookInventory.Shared.ComicBook_Author
  langs:
  - csharp
  - vb
  name: AuthorId
  nameWithType: ComicBook_Author.AuthorId
  fullName: ComicBookInventory.Shared.ComicBook_Author.AuthorId
  type: Property
  source:
    remote:
      path: src/ComicBookInventory.Domain/Entities/ComicBook_Author.cs
      branch: wip/extend-character-model
      repo: git@github.com:rnemeth90/ComicBookInventoryApp.git
    id: AuthorId
    path: Entities/ComicBook_Author.cs
    startLine: 11
  assemblies:
  - ComicBookInventory.Domain
  namespace: ComicBookInventory.Shared
  syntax:
    content: public int? AuthorId { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public Property AuthorId As Integer?
  overload: ComicBookInventory.Shared.ComicBook_Author.AuthorId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ComicBookInventory.Shared.ComicBook_Author.Author
  commentId: P:ComicBookInventory.Shared.ComicBook_Author.Author
  id: Author
  parent: ComicBookInventory.Shared.ComicBook_Author
  langs:
  - csharp
  - vb
  name: Author
  nameWithType: ComicBook_Author.Author
  fullName: ComicBookInventory.Shared.ComicBook_Author.Author
  type: Property
  source:
    remote:
      path: src/ComicBookInventory.Domain/Entities/ComicBook_Author.cs
      branch: wip/extend-character-model
      repo: git@github.com:rnemeth90/ComicBookInventoryApp.git
    id: Author
    path: Entities/ComicBook_Author.cs
    startLine: 12
  assemblies:
  - ComicBookInventory.Domain
  namespace: ComicBookInventory.Shared
  syntax:
    content: public Author Author { get; set; }
    parameters: []
    return:
      type: ComicBookInventory.Shared.Author
    content.vb: Public Property Author As Author
  overload: ComicBookInventory.Shared.ComicBook_Author.Author*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: ComicBookInventory.Shared
  commentId: N:ComicBookInventory.Shared
  name: ComicBookInventory.Shared
  nameWithType: ComicBookInventory.Shared
  fullName: ComicBookInventory.Shared
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: ComicBookInventory.Shared.ComicBook_Author.Id*
  commentId: Overload:ComicBookInventory.Shared.ComicBook_Author.Id
  name: Id
  nameWithType: ComicBook_Author.Id
  fullName: ComicBookInventory.Shared.ComicBook_Author.Id
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: ComicBookInventory.Shared.ComicBook_Author.ComicBookId*
  commentId: Overload:ComicBookInventory.Shared.ComicBook_Author.ComicBookId
  name: ComicBookId
  nameWithType: ComicBook_Author.ComicBookId
  fullName: ComicBookInventory.Shared.ComicBook_Author.ComicBookId
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: ComicBookInventory.Shared.ComicBook_Author.ComicBook*
  commentId: Overload:ComicBookInventory.Shared.ComicBook_Author.ComicBook
  name: ComicBook
  nameWithType: ComicBook_Author.ComicBook
  fullName: ComicBookInventory.Shared.ComicBook_Author.ComicBook
- uid: ComicBookInventory.Shared.ComicBook
  commentId: T:ComicBookInventory.Shared.ComicBook
  parent: ComicBookInventory.Shared
  name: ComicBook
  nameWithType: ComicBook
  fullName: ComicBookInventory.Shared.ComicBook
- uid: ComicBookInventory.Shared.ComicBook_Author.AuthorId*
  commentId: Overload:ComicBookInventory.Shared.ComicBook_Author.AuthorId
  name: AuthorId
  nameWithType: ComicBook_Author.AuthorId
  fullName: ComicBookInventory.Shared.ComicBook_Author.AuthorId
- uid: ComicBookInventory.Shared.ComicBook_Author.Author*
  commentId: Overload:ComicBookInventory.Shared.ComicBook_Author.Author
  name: Author
  nameWithType: ComicBook_Author.Author
  fullName: ComicBookInventory.Shared.ComicBook_Author.Author
- uid: ComicBookInventory.Shared.Author
  commentId: T:ComicBookInventory.Shared.Author
  parent: ComicBookInventory.Shared
  name: Author
  nameWithType: Author
  fullName: ComicBookInventory.Shared.Author

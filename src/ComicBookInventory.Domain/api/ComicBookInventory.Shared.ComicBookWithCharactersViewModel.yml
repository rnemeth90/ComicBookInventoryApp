### YamlMime:ManagedReference
items:
- uid: ComicBookInventory.Shared.ComicBookWithCharactersViewModel
  commentId: T:ComicBookInventory.Shared.ComicBookWithCharactersViewModel
  id: ComicBookWithCharactersViewModel
  parent: ComicBookInventory.Shared
  children:
  - ComicBookInventory.Shared.ComicBookWithCharactersViewModel.CharacterNames
  - ComicBookInventory.Shared.ComicBookWithCharactersViewModel.CoverUrl
  - ComicBookInventory.Shared.ComicBookWithCharactersViewModel.DateRead
  - ComicBookInventory.Shared.ComicBookWithCharactersViewModel.Description
  - ComicBookInventory.Shared.ComicBookWithCharactersViewModel.Genre
  - ComicBookInventory.Shared.ComicBookWithCharactersViewModel.Id
  - ComicBookInventory.Shared.ComicBookWithCharactersViewModel.IsRead
  - ComicBookInventory.Shared.ComicBookWithCharactersViewModel.Rating
  - ComicBookInventory.Shared.ComicBookWithCharactersViewModel.Title
  langs:
  - csharp
  - vb
  name: ComicBookWithCharactersViewModel
  nameWithType: ComicBookWithCharactersViewModel
  fullName: ComicBookInventory.Shared.ComicBookWithCharactersViewModel
  type: Class
  source:
    remote:
      path: src/ComicBookInventory.Domain/Entities/ViewModels/ComicBookWithCharactersViewModel.cs
      branch: wip/extend-character-model
      repo: git@github.com:rnemeth90/ComicBookInventoryApp.git
    id: ComicBookWithCharactersViewModel
    path: Entities/ViewModels/ComicBookWithCharactersViewModel.cs
    startLine: 4
  assemblies:
  - ComicBookInventory.Domain
  namespace: ComicBookInventory.Shared
  syntax:
    content: public class ComicBookWithCharactersViewModel
    content.vb: Public Class ComicBookWithCharactersViewModel
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: ComicBookInventory.Shared.ComicBookWithCharactersViewModel.Id
  commentId: P:ComicBookInventory.Shared.ComicBookWithCharactersViewModel.Id
  id: Id
  parent: ComicBookInventory.Shared.ComicBookWithCharactersViewModel
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: ComicBookWithCharactersViewModel.Id
  fullName: ComicBookInventory.Shared.ComicBookWithCharactersViewModel.Id
  type: Property
  source:
    remote:
      path: src/ComicBookInventory.Domain/Entities/ViewModels/ComicBookWithCharactersViewModel.cs
      branch: wip/extend-character-model
      repo: git@github.com:rnemeth90/ComicBookInventoryApp.git
    id: Id
    path: Entities/ViewModels/ComicBookWithCharactersViewModel.cs
    startLine: 6
  assemblies:
  - ComicBookInventory.Domain
  namespace: ComicBookInventory.Shared
  syntax:
    content: public int Id { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Id As Integer
  overload: ComicBookInventory.Shared.ComicBookWithCharactersViewModel.Id*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ComicBookInventory.Shared.ComicBookWithCharactersViewModel.Title
  commentId: P:ComicBookInventory.Shared.ComicBookWithCharactersViewModel.Title
  id: Title
  parent: ComicBookInventory.Shared.ComicBookWithCharactersViewModel
  langs:
  - csharp
  - vb
  name: Title
  nameWithType: ComicBookWithCharactersViewModel.Title
  fullName: ComicBookInventory.Shared.ComicBookWithCharactersViewModel.Title
  type: Property
  source:
    remote:
      path: src/ComicBookInventory.Domain/Entities/ViewModels/ComicBookWithCharactersViewModel.cs
      branch: wip/extend-character-model
      repo: git@github.com:rnemeth90/ComicBookInventoryApp.git
    id: Title
    path: Entities/ViewModels/ComicBookWithCharactersViewModel.cs
    startLine: 8
  assemblies:
  - ComicBookInventory.Domain
  namespace: ComicBookInventory.Shared
  syntax:
    content: >-
      [Required]

      [StringLength(60, MinimumLength = 2)]

      public string Title { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Required>

      <StringLength(60, MinimumLength:=2)>

      Public Property Title As String
  overload: ComicBookInventory.Shared.ComicBookWithCharactersViewModel.Title*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  - type: System.ComponentModel.DataAnnotations.StringLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.StringLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 60
    namedArguments:
    - name: MinimumLength
      type: System.Int32
      value: 2
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ComicBookInventory.Shared.ComicBookWithCharactersViewModel.Description
  commentId: P:ComicBookInventory.Shared.ComicBookWithCharactersViewModel.Description
  id: Description
  parent: ComicBookInventory.Shared.ComicBookWithCharactersViewModel
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: ComicBookWithCharactersViewModel.Description
  fullName: ComicBookInventory.Shared.ComicBookWithCharactersViewModel.Description
  type: Property
  source:
    remote:
      path: src/ComicBookInventory.Domain/Entities/ViewModels/ComicBookWithCharactersViewModel.cs
      branch: wip/extend-character-model
      repo: git@github.com:rnemeth90/ComicBookInventoryApp.git
    id: Description
    path: Entities/ViewModels/ComicBookWithCharactersViewModel.cs
    startLine: 11
  assemblies:
  - ComicBookInventory.Domain
  namespace: ComicBookInventory.Shared
  syntax:
    content: public string Description { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Description As String
  overload: ComicBookInventory.Shared.ComicBookWithCharactersViewModel.Description*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ComicBookInventory.Shared.ComicBookWithCharactersViewModel.IsRead
  commentId: P:ComicBookInventory.Shared.ComicBookWithCharactersViewModel.IsRead
  id: IsRead
  parent: ComicBookInventory.Shared.ComicBookWithCharactersViewModel
  langs:
  - csharp
  - vb
  name: IsRead
  nameWithType: ComicBookWithCharactersViewModel.IsRead
  fullName: ComicBookInventory.Shared.ComicBookWithCharactersViewModel.IsRead
  type: Property
  source:
    remote:
      path: src/ComicBookInventory.Domain/Entities/ViewModels/ComicBookWithCharactersViewModel.cs
      branch: wip/extend-character-model
      repo: git@github.com:rnemeth90/ComicBookInventoryApp.git
    id: IsRead
    path: Entities/ViewModels/ComicBookWithCharactersViewModel.cs
    startLine: 12
  assemblies:
  - ComicBookInventory.Domain
  namespace: ComicBookInventory.Shared
  syntax:
    content: public bool IsRead { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsRead As Boolean
  overload: ComicBookInventory.Shared.ComicBookWithCharactersViewModel.IsRead*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ComicBookInventory.Shared.ComicBookWithCharactersViewModel.DateRead
  commentId: P:ComicBookInventory.Shared.ComicBookWithCharactersViewModel.DateRead
  id: DateRead
  parent: ComicBookInventory.Shared.ComicBookWithCharactersViewModel
  langs:
  - csharp
  - vb
  name: DateRead
  nameWithType: ComicBookWithCharactersViewModel.DateRead
  fullName: ComicBookInventory.Shared.ComicBookWithCharactersViewModel.DateRead
  type: Property
  source:
    remote:
      path: src/ComicBookInventory.Domain/Entities/ViewModels/ComicBookWithCharactersViewModel.cs
      branch: wip/extend-character-model
      repo: git@github.com:rnemeth90/ComicBookInventoryApp.git
    id: DateRead
    path: Entities/ViewModels/ComicBookWithCharactersViewModel.cs
    startLine: 13
  assemblies:
  - ComicBookInventory.Domain
  namespace: ComicBookInventory.Shared
  syntax:
    content: public DateTime? DateRead { get; set; }
    parameters: []
    return:
      type: System.Nullable{DateTime}
    content.vb: Public Property DateRead As DateTime?
  overload: ComicBookInventory.Shared.ComicBookWithCharactersViewModel.DateRead*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ComicBookInventory.Shared.ComicBookWithCharactersViewModel.Rating
  commentId: P:ComicBookInventory.Shared.ComicBookWithCharactersViewModel.Rating
  id: Rating
  parent: ComicBookInventory.Shared.ComicBookWithCharactersViewModel
  langs:
  - csharp
  - vb
  name: Rating
  nameWithType: ComicBookWithCharactersViewModel.Rating
  fullName: ComicBookInventory.Shared.ComicBookWithCharactersViewModel.Rating
  type: Property
  source:
    remote:
      path: src/ComicBookInventory.Domain/Entities/ViewModels/ComicBookWithCharactersViewModel.cs
      branch: wip/extend-character-model
      repo: git@github.com:rnemeth90/ComicBookInventoryApp.git
    id: Rating
    path: Entities/ViewModels/ComicBookWithCharactersViewModel.cs
    startLine: 15
  assemblies:
  - ComicBookInventory.Domain
  namespace: ComicBookInventory.Shared
  syntax:
    content: >-
      [Range(1, 10)]

      public int? Rating { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <Range(1, 10)>

      Public Property Rating As Integer?
  overload: ComicBookInventory.Shared.ComicBookWithCharactersViewModel.Rating*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RangeAttribute
    ctor: System.ComponentModel.DataAnnotations.RangeAttribute.#ctor(System.Int32,System.Int32)
    arguments:
    - type: System.Int32
      value: 1
    - type: System.Int32
      value: 10
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ComicBookInventory.Shared.ComicBookWithCharactersViewModel.Genre
  commentId: P:ComicBookInventory.Shared.ComicBookWithCharactersViewModel.Genre
  id: Genre
  parent: ComicBookInventory.Shared.ComicBookWithCharactersViewModel
  langs:
  - csharp
  - vb
  name: Genre
  nameWithType: ComicBookWithCharactersViewModel.Genre
  fullName: ComicBookInventory.Shared.ComicBookWithCharactersViewModel.Genre
  type: Property
  source:
    remote:
      path: src/ComicBookInventory.Domain/Entities/ViewModels/ComicBookWithCharactersViewModel.cs
      branch: wip/extend-character-model
      repo: git@github.com:rnemeth90/ComicBookInventoryApp.git
    id: Genre
    path: Entities/ViewModels/ComicBookWithCharactersViewModel.cs
    startLine: 17
  assemblies:
  - ComicBookInventory.Domain
  namespace: ComicBookInventory.Shared
  syntax:
    content: public string Genre { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Genre As String
  overload: ComicBookInventory.Shared.ComicBookWithCharactersViewModel.Genre*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ComicBookInventory.Shared.ComicBookWithCharactersViewModel.CoverUrl
  commentId: P:ComicBookInventory.Shared.ComicBookWithCharactersViewModel.CoverUrl
  id: CoverUrl
  parent: ComicBookInventory.Shared.ComicBookWithCharactersViewModel
  langs:
  - csharp
  - vb
  name: CoverUrl
  nameWithType: ComicBookWithCharactersViewModel.CoverUrl
  fullName: ComicBookInventory.Shared.ComicBookWithCharactersViewModel.CoverUrl
  type: Property
  source:
    remote:
      path: src/ComicBookInventory.Domain/Entities/ViewModels/ComicBookWithCharactersViewModel.cs
      branch: wip/extend-character-model
      repo: git@github.com:rnemeth90/ComicBookInventoryApp.git
    id: CoverUrl
    path: Entities/ViewModels/ComicBookWithCharactersViewModel.cs
    startLine: 28
  assemblies:
  - ComicBookInventory.Domain
  namespace: ComicBookInventory.Shared
  summary: "\nMatch any sanely formed URI\nExamples:\nhttps://www.google.com\nwww.google.com/googler.pic\nhttp://www.google.com\nhttps://www.google.com/apiod.jpg\n"
  example: []
  syntax:
    content: >-
      [RegularExpression("(?:(())(www\\.([^/?#\\s]*))|((http(s)?|ftp):)(\\/\\/([^/?#\\s]*)))([^?#\\s]*)(\\?([^#\\s]*))?(#([^\\s]*))?")]

      public string CoverUrl { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <RegularExpression("(?:(())(www\.([^/?#\s]*))|((http(s)?|ftp):)(\/\/([^/?#\s]*)))([^?#\s]*)(\?([^#\s]*))?(#([^\s]*))?")>

      Public Property CoverUrl As String
  overload: ComicBookInventory.Shared.ComicBookWithCharactersViewModel.CoverUrl*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RegularExpressionAttribute
    ctor: System.ComponentModel.DataAnnotations.RegularExpressionAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: (?:(())(www\.([^/?#\s]*))|((http(s)?|ftp):)(\/\/([^/?#\s]*)))([^?#\s]*)(\?([^#\s]*))?(#([^\s]*))?
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ComicBookInventory.Shared.ComicBookWithCharactersViewModel.CharacterNames
  commentId: P:ComicBookInventory.Shared.ComicBookWithCharactersViewModel.CharacterNames
  id: CharacterNames
  parent: ComicBookInventory.Shared.ComicBookWithCharactersViewModel
  langs:
  - csharp
  - vb
  name: CharacterNames
  nameWithType: ComicBookWithCharactersViewModel.CharacterNames
  fullName: ComicBookInventory.Shared.ComicBookWithCharactersViewModel.CharacterNames
  type: Property
  source:
    remote:
      path: src/ComicBookInventory.Domain/Entities/ViewModels/ComicBookWithCharactersViewModel.cs
      branch: wip/extend-character-model
      repo: git@github.com:rnemeth90/ComicBookInventoryApp.git
    id: CharacterNames
    path: Entities/ViewModels/ComicBookWithCharactersViewModel.cs
    startLine: 35
  assemblies:
  - ComicBookInventory.Domain
  namespace: ComicBookInventory.Shared
  summary: "\nNavigation properties\n"
  example: []
  syntax:
    content: public ICollection<string> CharacterNames { get; set; }
    parameters: []
    return:
      type: ICollection{System.String}
    content.vb: Public Property CharacterNames As ICollection(Of String)
  overload: ComicBookInventory.Shared.ComicBookWithCharactersViewModel.CharacterNames*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: ComicBookInventory.Shared
  commentId: N:ComicBookInventory.Shared
  name: ComicBookInventory.Shared
  nameWithType: ComicBookInventory.Shared
  fullName: ComicBookInventory.Shared
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: ComicBookInventory.Shared.ComicBookWithCharactersViewModel.Id*
  commentId: Overload:ComicBookInventory.Shared.ComicBookWithCharactersViewModel.Id
  name: Id
  nameWithType: ComicBookWithCharactersViewModel.Id
  fullName: ComicBookInventory.Shared.ComicBookWithCharactersViewModel.Id
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: ComicBookInventory.Shared.ComicBookWithCharactersViewModel.Title*
  commentId: Overload:ComicBookInventory.Shared.ComicBookWithCharactersViewModel.Title
  name: Title
  nameWithType: ComicBookWithCharactersViewModel.Title
  fullName: ComicBookInventory.Shared.ComicBookWithCharactersViewModel.Title
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: ComicBookInventory.Shared.ComicBookWithCharactersViewModel.Description*
  commentId: Overload:ComicBookInventory.Shared.ComicBookWithCharactersViewModel.Description
  name: Description
  nameWithType: ComicBookWithCharactersViewModel.Description
  fullName: ComicBookInventory.Shared.ComicBookWithCharactersViewModel.Description
- uid: ComicBookInventory.Shared.ComicBookWithCharactersViewModel.IsRead*
  commentId: Overload:ComicBookInventory.Shared.ComicBookWithCharactersViewModel.IsRead
  name: IsRead
  nameWithType: ComicBookWithCharactersViewModel.IsRead
  fullName: ComicBookInventory.Shared.ComicBookWithCharactersViewModel.IsRead
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: ComicBookInventory.Shared.ComicBookWithCharactersViewModel.DateRead*
  commentId: Overload:ComicBookInventory.Shared.ComicBookWithCharactersViewModel.DateRead
  name: DateRead
  nameWithType: ComicBookWithCharactersViewModel.DateRead
  fullName: ComicBookInventory.Shared.ComicBookWithCharactersViewModel.DateRead
- uid: System.Nullable{DateTime}
  commentId: T:System.Nullable{DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullName.vb: System.Nullable(Of DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: ComicBookInventory.Shared.ComicBookWithCharactersViewModel.Rating*
  commentId: Overload:ComicBookInventory.Shared.ComicBookWithCharactersViewModel.Rating
  name: Rating
  nameWithType: ComicBookWithCharactersViewModel.Rating
  fullName: ComicBookInventory.Shared.ComicBookWithCharactersViewModel.Rating
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ComicBookInventory.Shared.ComicBookWithCharactersViewModel.Genre*
  commentId: Overload:ComicBookInventory.Shared.ComicBookWithCharactersViewModel.Genre
  name: Genre
  nameWithType: ComicBookWithCharactersViewModel.Genre
  fullName: ComicBookInventory.Shared.ComicBookWithCharactersViewModel.Genre
- uid: ComicBookInventory.Shared.ComicBookWithCharactersViewModel.CoverUrl*
  commentId: Overload:ComicBookInventory.Shared.ComicBookWithCharactersViewModel.CoverUrl
  name: CoverUrl
  nameWithType: ComicBookWithCharactersViewModel.CoverUrl
  fullName: ComicBookInventory.Shared.ComicBookWithCharactersViewModel.CoverUrl
- uid: ComicBookInventory.Shared.ComicBookWithCharactersViewModel.CharacterNames*
  commentId: Overload:ComicBookInventory.Shared.ComicBookWithCharactersViewModel.CharacterNames
  name: CharacterNames
  nameWithType: ComicBookWithCharactersViewModel.CharacterNames
  fullName: ComicBookInventory.Shared.ComicBookWithCharactersViewModel.CharacterNames
- uid: ICollection{System.String}
  commentId: '!:ICollection{System.String}'
  definition: ICollection`1
  name: ICollection<String>
  nameWithType: ICollection<String>
  fullName: ICollection<System.String>
  nameWithType.vb: ICollection(Of String)
  fullName.vb: ICollection(Of System.String)
  name.vb: ICollection(Of String)
  spec.csharp:
  - uid: ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ICollection`1
  isExternal: true
  name: ICollection<>
  nameWithType: ICollection<>
  fullName: ICollection<>
  nameWithType.vb: ICollection(Of )
  fullName.vb: ICollection(Of )
  name.vb: ICollection(Of )
  spec.csharp:
  - uid: ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )

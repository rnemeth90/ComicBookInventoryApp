### YamlMime:ManagedReference
items:
- uid: ComicBookInventory.Shared.IComicBookRepository
  commentId: T:ComicBookInventory.Shared.IComicBookRepository
  id: IComicBookRepository
  parent: ComicBookInventory.Shared
  children:
  - ComicBookInventory.Shared.IComicBookRepository.AddBook(ComicBookInventory.Shared.ComicBookWithAuthorsAndCharactersViewModel)
  - ComicBookInventory.Shared.IComicBookRepository.GetAllBooks
  - ComicBookInventory.Shared.IComicBookRepository.GetBookById(System.Int32)
  - ComicBookInventory.Shared.IComicBookRepository.UpdateBook(System.Int32,ComicBookInventory.Shared.ComicBookViewModel)
  langs:
  - csharp
  - vb
  name: IComicBookRepository
  nameWithType: IComicBookRepository
  fullName: ComicBookInventory.Shared.IComicBookRepository
  type: Interface
  source:
    remote:
      path: src/ComicBookInventory.Domain/Interfaces/IComicBookRepository.cs
      branch: wip/extend-character-model
      repo: git@github.com:rnemeth90/ComicBookInventoryApp.git
    id: IComicBookRepository
    path: Interfaces/IComicBookRepository.cs
    startLine: 2
  assemblies:
  - ComicBookInventory.Domain
  namespace: ComicBookInventory.Shared
  syntax:
    content: 'public interface IComicBookRepository : IGenericRepository<ComicBook>'
    content.vb: >-
      Public Interface IComicBookRepository
          Inherits IGenericRepository(Of ComicBook)
  inheritedMembers:
  - ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.ComicBook}.GetAll
  - ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.ComicBook}.GetWhere(System.Linq.Expressions.Expression{Func{ComicBookInventory.Shared.ComicBook,System.Boolean}})
  - ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.ComicBook}.Find(System.Linq.Expressions.Expression{Func{ComicBookInventory.Shared.ComicBook,System.Boolean}})
  - ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.ComicBook}.Add(ComicBookInventory.Shared.ComicBook)
  - ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.ComicBook}.AddRange(IEnumerable{ComicBookInventory.Shared.ComicBook})
  - ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.ComicBook}.Update(ComicBookInventory.Shared.ComicBook)
  - ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.ComicBook}.UpdateRange(IEnumerable{ComicBookInventory.Shared.ComicBook})
  - ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.ComicBook}.Remove(ComicBookInventory.Shared.ComicBook)
  - ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.ComicBook}.RemoveById(System.Int32)
  - ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.ComicBook}.RemoveWhere(System.Linq.Expressions.Expression{Func{ComicBookInventory.Shared.ComicBook,System.Boolean}})
  - ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.ComicBook}.RemoveRange(IEnumerable{ComicBookInventory.Shared.ComicBook})
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: ComicBookInventory.Shared.IComicBookRepository.GetAllBooks
  commentId: M:ComicBookInventory.Shared.IComicBookRepository.GetAllBooks
  id: GetAllBooks
  parent: ComicBookInventory.Shared.IComicBookRepository
  langs:
  - csharp
  - vb
  name: GetAllBooks()
  nameWithType: IComicBookRepository.GetAllBooks()
  fullName: ComicBookInventory.Shared.IComicBookRepository.GetAllBooks()
  type: Method
  source:
    remote:
      path: src/ComicBookInventory.Domain/Interfaces/IComicBookRepository.cs
      branch: wip/extend-character-model
      repo: git@github.com:rnemeth90/ComicBookInventoryApp.git
    id: GetAllBooks
    path: Interfaces/IComicBookRepository.cs
    startLine: 4
  assemblies:
  - ComicBookInventory.Domain
  namespace: ComicBookInventory.Shared
  syntax:
    content: IEnumerable<ComicBookWithAuthorsAndCharactersViewModel> GetAllBooks()
    return:
      type: IEnumerable{ComicBookInventory.Shared.ComicBookWithAuthorsAndCharactersViewModel}
    content.vb: Function GetAllBooks As IEnumerable(Of ComicBookWithAuthorsAndCharactersViewModel)
  overload: ComicBookInventory.Shared.IComicBookRepository.GetAllBooks*
- uid: ComicBookInventory.Shared.IComicBookRepository.GetBookById(System.Int32)
  commentId: M:ComicBookInventory.Shared.IComicBookRepository.GetBookById(System.Int32)
  id: GetBookById(System.Int32)
  parent: ComicBookInventory.Shared.IComicBookRepository
  langs:
  - csharp
  - vb
  name: GetBookById(Int32)
  nameWithType: IComicBookRepository.GetBookById(Int32)
  fullName: ComicBookInventory.Shared.IComicBookRepository.GetBookById(System.Int32)
  type: Method
  source:
    remote:
      path: src/ComicBookInventory.Domain/Interfaces/IComicBookRepository.cs
      branch: wip/extend-character-model
      repo: git@github.com:rnemeth90/ComicBookInventoryApp.git
    id: GetBookById
    path: Interfaces/IComicBookRepository.cs
    startLine: 5
  assemblies:
  - ComicBookInventory.Domain
  namespace: ComicBookInventory.Shared
  syntax:
    content: ComicBookWithAuthorsAndCharactersViewModel GetBookById(int bookId)
    parameters:
    - id: bookId
      type: System.Int32
    return:
      type: ComicBookInventory.Shared.ComicBookWithAuthorsAndCharactersViewModel
    content.vb: Function GetBookById(bookId As Integer) As ComicBookWithAuthorsAndCharactersViewModel
  overload: ComicBookInventory.Shared.IComicBookRepository.GetBookById*
- uid: ComicBookInventory.Shared.IComicBookRepository.AddBook(ComicBookInventory.Shared.ComicBookWithAuthorsAndCharactersViewModel)
  commentId: M:ComicBookInventory.Shared.IComicBookRepository.AddBook(ComicBookInventory.Shared.ComicBookWithAuthorsAndCharactersViewModel)
  id: AddBook(ComicBookInventory.Shared.ComicBookWithAuthorsAndCharactersViewModel)
  parent: ComicBookInventory.Shared.IComicBookRepository
  langs:
  - csharp
  - vb
  name: AddBook(ComicBookWithAuthorsAndCharactersViewModel)
  nameWithType: IComicBookRepository.AddBook(ComicBookWithAuthorsAndCharactersViewModel)
  fullName: ComicBookInventory.Shared.IComicBookRepository.AddBook(ComicBookInventory.Shared.ComicBookWithAuthorsAndCharactersViewModel)
  type: Method
  source:
    remote:
      path: src/ComicBookInventory.Domain/Interfaces/IComicBookRepository.cs
      branch: wip/extend-character-model
      repo: git@github.com:rnemeth90/ComicBookInventoryApp.git
    id: AddBook
    path: Interfaces/IComicBookRepository.cs
    startLine: 6
  assemblies:
  - ComicBookInventory.Domain
  namespace: ComicBookInventory.Shared
  syntax:
    content: void AddBook(ComicBookWithAuthorsAndCharactersViewModel book)
    parameters:
    - id: book
      type: ComicBookInventory.Shared.ComicBookWithAuthorsAndCharactersViewModel
    content.vb: Sub AddBook(book As ComicBookWithAuthorsAndCharactersViewModel)
  overload: ComicBookInventory.Shared.IComicBookRepository.AddBook*
- uid: ComicBookInventory.Shared.IComicBookRepository.UpdateBook(System.Int32,ComicBookInventory.Shared.ComicBookViewModel)
  commentId: M:ComicBookInventory.Shared.IComicBookRepository.UpdateBook(System.Int32,ComicBookInventory.Shared.ComicBookViewModel)
  id: UpdateBook(System.Int32,ComicBookInventory.Shared.ComicBookViewModel)
  parent: ComicBookInventory.Shared.IComicBookRepository
  langs:
  - csharp
  - vb
  name: UpdateBook(Int32, ComicBookViewModel)
  nameWithType: IComicBookRepository.UpdateBook(Int32, ComicBookViewModel)
  fullName: ComicBookInventory.Shared.IComicBookRepository.UpdateBook(System.Int32, ComicBookInventory.Shared.ComicBookViewModel)
  type: Method
  source:
    remote:
      path: src/ComicBookInventory.Domain/Interfaces/IComicBookRepository.cs
      branch: wip/extend-character-model
      repo: git@github.com:rnemeth90/ComicBookInventoryApp.git
    id: UpdateBook
    path: Interfaces/IComicBookRepository.cs
    startLine: 7
  assemblies:
  - ComicBookInventory.Domain
  namespace: ComicBookInventory.Shared
  syntax:
    content: void UpdateBook(int id, ComicBookViewModel book)
    parameters:
    - id: id
      type: System.Int32
    - id: book
      type: ComicBookInventory.Shared.ComicBookViewModel
    content.vb: Sub UpdateBook(id As Integer, book As ComicBookViewModel)
  overload: ComicBookInventory.Shared.IComicBookRepository.UpdateBook*
references:
- uid: ComicBookInventory.Shared
  commentId: N:ComicBookInventory.Shared
  name: ComicBookInventory.Shared
  nameWithType: ComicBookInventory.Shared
  fullName: ComicBookInventory.Shared
- uid: ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.ComicBook}.GetAll
  commentId: M:ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.ComicBook}.GetAll
  parent: ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.ComicBook}
  definition: ComicBookInventory.Shared.IGenericRepository`1.GetAll
  name: GetAll()
  nameWithType: IGenericRepository<ComicBook>.GetAll()
  fullName: ComicBookInventory.Shared.IGenericRepository<ComicBookInventory.Shared.ComicBook>.GetAll()
  nameWithType.vb: IGenericRepository(Of ComicBook).GetAll()
  fullName.vb: ComicBookInventory.Shared.IGenericRepository(Of ComicBookInventory.Shared.ComicBook).GetAll()
  spec.csharp:
  - uid: ComicBookInventory.Shared.IGenericRepository`1.GetAll
    name: GetAll
    nameWithType: IGenericRepository<ComicBook>.GetAll
    fullName: ComicBookInventory.Shared.IGenericRepository<ComicBookInventory.Shared.ComicBook>.GetAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ComicBookInventory.Shared.IGenericRepository`1.GetAll
    name: GetAll
    nameWithType: IGenericRepository(Of ComicBook).GetAll
    fullName: ComicBookInventory.Shared.IGenericRepository(Of ComicBookInventory.Shared.ComicBook).GetAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.ComicBook}.GetWhere(System.Linq.Expressions.Expression{Func{ComicBookInventory.Shared.ComicBook,System.Boolean}})
  commentId: M:ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.ComicBook}.GetWhere(System.Linq.Expressions.Expression{Func{ComicBookInventory.Shared.ComicBook,System.Boolean}})
  parent: ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.ComicBook}
  definition: ComicBookInventory.Shared.IGenericRepository`1.GetWhere(System.Linq.Expressions.Expression{Func{`0,System.Boolean}})
  name: GetWhere(Expression<Func<ComicBook, Boolean>>)
  nameWithType: IGenericRepository<ComicBook>.GetWhere(Expression<Func<ComicBook, Boolean>>)
  fullName: ComicBookInventory.Shared.IGenericRepository<ComicBookInventory.Shared.ComicBook>.GetWhere(System.Linq.Expressions.Expression<Func<ComicBookInventory.Shared.ComicBook, System.Boolean>>)
  nameWithType.vb: IGenericRepository(Of ComicBook).GetWhere(Expression(Of Func(Of ComicBook, Boolean)))
  fullName.vb: ComicBookInventory.Shared.IGenericRepository(Of ComicBookInventory.Shared.ComicBook).GetWhere(System.Linq.Expressions.Expression(Of Func(Of ComicBookInventory.Shared.ComicBook, System.Boolean)))
  name.vb: GetWhere(Expression(Of Func(Of ComicBook, Boolean)))
  spec.csharp:
  - uid: ComicBookInventory.Shared.IGenericRepository`1.GetWhere(System.Linq.Expressions.Expression{Func{`0,System.Boolean}})
    name: GetWhere
    nameWithType: IGenericRepository<ComicBook>.GetWhere
    fullName: ComicBookInventory.Shared.IGenericRepository<ComicBookInventory.Shared.ComicBook>.GetWhere
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: ComicBookInventory.Shared.ComicBook
    name: ComicBook
    nameWithType: ComicBook
    fullName: ComicBookInventory.Shared.ComicBook
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ComicBookInventory.Shared.IGenericRepository`1.GetWhere(System.Linq.Expressions.Expression{Func{`0,System.Boolean}})
    name: GetWhere
    nameWithType: IGenericRepository(Of ComicBook).GetWhere
    fullName: ComicBookInventory.Shared.IGenericRepository(Of ComicBookInventory.Shared.ComicBook).GetWhere
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: ComicBookInventory.Shared.ComicBook
    name: ComicBook
    nameWithType: ComicBook
    fullName: ComicBookInventory.Shared.ComicBook
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.ComicBook}.Find(System.Linq.Expressions.Expression{Func{ComicBookInventory.Shared.ComicBook,System.Boolean}})
  commentId: M:ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.ComicBook}.Find(System.Linq.Expressions.Expression{Func{ComicBookInventory.Shared.ComicBook,System.Boolean}})
  parent: ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.ComicBook}
  definition: ComicBookInventory.Shared.IGenericRepository`1.Find(System.Linq.Expressions.Expression{Func{`0,System.Boolean}})
  name: Find(Expression<Func<ComicBook, Boolean>>)
  nameWithType: IGenericRepository<ComicBook>.Find(Expression<Func<ComicBook, Boolean>>)
  fullName: ComicBookInventory.Shared.IGenericRepository<ComicBookInventory.Shared.ComicBook>.Find(System.Linq.Expressions.Expression<Func<ComicBookInventory.Shared.ComicBook, System.Boolean>>)
  nameWithType.vb: IGenericRepository(Of ComicBook).Find(Expression(Of Func(Of ComicBook, Boolean)))
  fullName.vb: ComicBookInventory.Shared.IGenericRepository(Of ComicBookInventory.Shared.ComicBook).Find(System.Linq.Expressions.Expression(Of Func(Of ComicBookInventory.Shared.ComicBook, System.Boolean)))
  name.vb: Find(Expression(Of Func(Of ComicBook, Boolean)))
  spec.csharp:
  - uid: ComicBookInventory.Shared.IGenericRepository`1.Find(System.Linq.Expressions.Expression{Func{`0,System.Boolean}})
    name: Find
    nameWithType: IGenericRepository<ComicBook>.Find
    fullName: ComicBookInventory.Shared.IGenericRepository<ComicBookInventory.Shared.ComicBook>.Find
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: ComicBookInventory.Shared.ComicBook
    name: ComicBook
    nameWithType: ComicBook
    fullName: ComicBookInventory.Shared.ComicBook
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ComicBookInventory.Shared.IGenericRepository`1.Find(System.Linq.Expressions.Expression{Func{`0,System.Boolean}})
    name: Find
    nameWithType: IGenericRepository(Of ComicBook).Find
    fullName: ComicBookInventory.Shared.IGenericRepository(Of ComicBookInventory.Shared.ComicBook).Find
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: ComicBookInventory.Shared.ComicBook
    name: ComicBook
    nameWithType: ComicBook
    fullName: ComicBookInventory.Shared.ComicBook
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.ComicBook}.Add(ComicBookInventory.Shared.ComicBook)
  commentId: M:ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.ComicBook}.Add(ComicBookInventory.Shared.ComicBook)
  parent: ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.ComicBook}
  definition: ComicBookInventory.Shared.IGenericRepository`1.Add(`0)
  name: Add(ComicBook)
  nameWithType: IGenericRepository<ComicBook>.Add(ComicBook)
  fullName: ComicBookInventory.Shared.IGenericRepository<ComicBookInventory.Shared.ComicBook>.Add(ComicBookInventory.Shared.ComicBook)
  nameWithType.vb: IGenericRepository(Of ComicBook).Add(ComicBook)
  fullName.vb: ComicBookInventory.Shared.IGenericRepository(Of ComicBookInventory.Shared.ComicBook).Add(ComicBookInventory.Shared.ComicBook)
  spec.csharp:
  - uid: ComicBookInventory.Shared.IGenericRepository`1.Add(`0)
    name: Add
    nameWithType: IGenericRepository<ComicBook>.Add
    fullName: ComicBookInventory.Shared.IGenericRepository<ComicBookInventory.Shared.ComicBook>.Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: ComicBookInventory.Shared.ComicBook
    name: ComicBook
    nameWithType: ComicBook
    fullName: ComicBookInventory.Shared.ComicBook
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ComicBookInventory.Shared.IGenericRepository`1.Add(`0)
    name: Add
    nameWithType: IGenericRepository(Of ComicBook).Add
    fullName: ComicBookInventory.Shared.IGenericRepository(Of ComicBookInventory.Shared.ComicBook).Add
  - name: (
    nameWithType: (
    fullName: (
  - uid: ComicBookInventory.Shared.ComicBook
    name: ComicBook
    nameWithType: ComicBook
    fullName: ComicBookInventory.Shared.ComicBook
  - name: )
    nameWithType: )
    fullName: )
- uid: ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.ComicBook}.AddRange(IEnumerable{ComicBookInventory.Shared.ComicBook})
  commentId: M:ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.ComicBook}.AddRange(IEnumerable{ComicBookInventory.Shared.ComicBook})
  parent: ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.ComicBook}
  definition: ComicBookInventory.Shared.IGenericRepository`1.AddRange(IEnumerable{`0})
  name: AddRange(IEnumerable<ComicBook>)
  nameWithType: IGenericRepository<ComicBook>.AddRange(IEnumerable<ComicBook>)
  fullName: ComicBookInventory.Shared.IGenericRepository<ComicBookInventory.Shared.ComicBook>.AddRange(IEnumerable<ComicBookInventory.Shared.ComicBook>)
  nameWithType.vb: IGenericRepository(Of ComicBook).AddRange(IEnumerable(Of ComicBook))
  fullName.vb: ComicBookInventory.Shared.IGenericRepository(Of ComicBookInventory.Shared.ComicBook).AddRange(IEnumerable(Of ComicBookInventory.Shared.ComicBook))
  name.vb: AddRange(IEnumerable(Of ComicBook))
  spec.csharp:
  - uid: ComicBookInventory.Shared.IGenericRepository`1.AddRange(IEnumerable{`0})
    name: AddRange
    nameWithType: IGenericRepository<ComicBook>.AddRange
    fullName: ComicBookInventory.Shared.IGenericRepository<ComicBookInventory.Shared.ComicBook>.AddRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: ComicBookInventory.Shared.ComicBook
    name: ComicBook
    nameWithType: ComicBook
    fullName: ComicBookInventory.Shared.ComicBook
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ComicBookInventory.Shared.IGenericRepository`1.AddRange(IEnumerable{`0})
    name: AddRange
    nameWithType: IGenericRepository(Of ComicBook).AddRange
    fullName: ComicBookInventory.Shared.IGenericRepository(Of ComicBookInventory.Shared.ComicBook).AddRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: ComicBookInventory.Shared.ComicBook
    name: ComicBook
    nameWithType: ComicBook
    fullName: ComicBookInventory.Shared.ComicBook
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.ComicBook}.Update(ComicBookInventory.Shared.ComicBook)
  commentId: M:ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.ComicBook}.Update(ComicBookInventory.Shared.ComicBook)
  parent: ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.ComicBook}
  definition: ComicBookInventory.Shared.IGenericRepository`1.Update(`0)
  name: Update(ComicBook)
  nameWithType: IGenericRepository<ComicBook>.Update(ComicBook)
  fullName: ComicBookInventory.Shared.IGenericRepository<ComicBookInventory.Shared.ComicBook>.Update(ComicBookInventory.Shared.ComicBook)
  nameWithType.vb: IGenericRepository(Of ComicBook).Update(ComicBook)
  fullName.vb: ComicBookInventory.Shared.IGenericRepository(Of ComicBookInventory.Shared.ComicBook).Update(ComicBookInventory.Shared.ComicBook)
  spec.csharp:
  - uid: ComicBookInventory.Shared.IGenericRepository`1.Update(`0)
    name: Update
    nameWithType: IGenericRepository<ComicBook>.Update
    fullName: ComicBookInventory.Shared.IGenericRepository<ComicBookInventory.Shared.ComicBook>.Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: ComicBookInventory.Shared.ComicBook
    name: ComicBook
    nameWithType: ComicBook
    fullName: ComicBookInventory.Shared.ComicBook
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ComicBookInventory.Shared.IGenericRepository`1.Update(`0)
    name: Update
    nameWithType: IGenericRepository(Of ComicBook).Update
    fullName: ComicBookInventory.Shared.IGenericRepository(Of ComicBookInventory.Shared.ComicBook).Update
  - name: (
    nameWithType: (
    fullName: (
  - uid: ComicBookInventory.Shared.ComicBook
    name: ComicBook
    nameWithType: ComicBook
    fullName: ComicBookInventory.Shared.ComicBook
  - name: )
    nameWithType: )
    fullName: )
- uid: ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.ComicBook}.UpdateRange(IEnumerable{ComicBookInventory.Shared.ComicBook})
  commentId: M:ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.ComicBook}.UpdateRange(IEnumerable{ComicBookInventory.Shared.ComicBook})
  parent: ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.ComicBook}
  definition: ComicBookInventory.Shared.IGenericRepository`1.UpdateRange(IEnumerable{`0})
  name: UpdateRange(IEnumerable<ComicBook>)
  nameWithType: IGenericRepository<ComicBook>.UpdateRange(IEnumerable<ComicBook>)
  fullName: ComicBookInventory.Shared.IGenericRepository<ComicBookInventory.Shared.ComicBook>.UpdateRange(IEnumerable<ComicBookInventory.Shared.ComicBook>)
  nameWithType.vb: IGenericRepository(Of ComicBook).UpdateRange(IEnumerable(Of ComicBook))
  fullName.vb: ComicBookInventory.Shared.IGenericRepository(Of ComicBookInventory.Shared.ComicBook).UpdateRange(IEnumerable(Of ComicBookInventory.Shared.ComicBook))
  name.vb: UpdateRange(IEnumerable(Of ComicBook))
  spec.csharp:
  - uid: ComicBookInventory.Shared.IGenericRepository`1.UpdateRange(IEnumerable{`0})
    name: UpdateRange
    nameWithType: IGenericRepository<ComicBook>.UpdateRange
    fullName: ComicBookInventory.Shared.IGenericRepository<ComicBookInventory.Shared.ComicBook>.UpdateRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: ComicBookInventory.Shared.ComicBook
    name: ComicBook
    nameWithType: ComicBook
    fullName: ComicBookInventory.Shared.ComicBook
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ComicBookInventory.Shared.IGenericRepository`1.UpdateRange(IEnumerable{`0})
    name: UpdateRange
    nameWithType: IGenericRepository(Of ComicBook).UpdateRange
    fullName: ComicBookInventory.Shared.IGenericRepository(Of ComicBookInventory.Shared.ComicBook).UpdateRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: ComicBookInventory.Shared.ComicBook
    name: ComicBook
    nameWithType: ComicBook
    fullName: ComicBookInventory.Shared.ComicBook
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.ComicBook}.Remove(ComicBookInventory.Shared.ComicBook)
  commentId: M:ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.ComicBook}.Remove(ComicBookInventory.Shared.ComicBook)
  parent: ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.ComicBook}
  definition: ComicBookInventory.Shared.IGenericRepository`1.Remove(`0)
  name: Remove(ComicBook)
  nameWithType: IGenericRepository<ComicBook>.Remove(ComicBook)
  fullName: ComicBookInventory.Shared.IGenericRepository<ComicBookInventory.Shared.ComicBook>.Remove(ComicBookInventory.Shared.ComicBook)
  nameWithType.vb: IGenericRepository(Of ComicBook).Remove(ComicBook)
  fullName.vb: ComicBookInventory.Shared.IGenericRepository(Of ComicBookInventory.Shared.ComicBook).Remove(ComicBookInventory.Shared.ComicBook)
  spec.csharp:
  - uid: ComicBookInventory.Shared.IGenericRepository`1.Remove(`0)
    name: Remove
    nameWithType: IGenericRepository<ComicBook>.Remove
    fullName: ComicBookInventory.Shared.IGenericRepository<ComicBookInventory.Shared.ComicBook>.Remove
  - name: (
    nameWithType: (
    fullName: (
  - uid: ComicBookInventory.Shared.ComicBook
    name: ComicBook
    nameWithType: ComicBook
    fullName: ComicBookInventory.Shared.ComicBook
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ComicBookInventory.Shared.IGenericRepository`1.Remove(`0)
    name: Remove
    nameWithType: IGenericRepository(Of ComicBook).Remove
    fullName: ComicBookInventory.Shared.IGenericRepository(Of ComicBookInventory.Shared.ComicBook).Remove
  - name: (
    nameWithType: (
    fullName: (
  - uid: ComicBookInventory.Shared.ComicBook
    name: ComicBook
    nameWithType: ComicBook
    fullName: ComicBookInventory.Shared.ComicBook
  - name: )
    nameWithType: )
    fullName: )
- uid: ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.ComicBook}.RemoveById(System.Int32)
  commentId: M:ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.ComicBook}.RemoveById(System.Int32)
  parent: ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.ComicBook}
  definition: ComicBookInventory.Shared.IGenericRepository`1.RemoveById(System.Int32)
  name: RemoveById(Int32)
  nameWithType: IGenericRepository<ComicBook>.RemoveById(Int32)
  fullName: ComicBookInventory.Shared.IGenericRepository<ComicBookInventory.Shared.ComicBook>.RemoveById(System.Int32)
  nameWithType.vb: IGenericRepository(Of ComicBook).RemoveById(Int32)
  fullName.vb: ComicBookInventory.Shared.IGenericRepository(Of ComicBookInventory.Shared.ComicBook).RemoveById(System.Int32)
  spec.csharp:
  - uid: ComicBookInventory.Shared.IGenericRepository`1.RemoveById(System.Int32)
    name: RemoveById
    nameWithType: IGenericRepository<ComicBook>.RemoveById
    fullName: ComicBookInventory.Shared.IGenericRepository<ComicBookInventory.Shared.ComicBook>.RemoveById
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ComicBookInventory.Shared.IGenericRepository`1.RemoveById(System.Int32)
    name: RemoveById
    nameWithType: IGenericRepository(Of ComicBook).RemoveById
    fullName: ComicBookInventory.Shared.IGenericRepository(Of ComicBookInventory.Shared.ComicBook).RemoveById
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.ComicBook}.RemoveWhere(System.Linq.Expressions.Expression{Func{ComicBookInventory.Shared.ComicBook,System.Boolean}})
  commentId: M:ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.ComicBook}.RemoveWhere(System.Linq.Expressions.Expression{Func{ComicBookInventory.Shared.ComicBook,System.Boolean}})
  parent: ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.ComicBook}
  definition: ComicBookInventory.Shared.IGenericRepository`1.RemoveWhere(System.Linq.Expressions.Expression{Func{`0,System.Boolean}})
  name: RemoveWhere(Expression<Func<ComicBook, Boolean>>)
  nameWithType: IGenericRepository<ComicBook>.RemoveWhere(Expression<Func<ComicBook, Boolean>>)
  fullName: ComicBookInventory.Shared.IGenericRepository<ComicBookInventory.Shared.ComicBook>.RemoveWhere(System.Linq.Expressions.Expression<Func<ComicBookInventory.Shared.ComicBook, System.Boolean>>)
  nameWithType.vb: IGenericRepository(Of ComicBook).RemoveWhere(Expression(Of Func(Of ComicBook, Boolean)))
  fullName.vb: ComicBookInventory.Shared.IGenericRepository(Of ComicBookInventory.Shared.ComicBook).RemoveWhere(System.Linq.Expressions.Expression(Of Func(Of ComicBookInventory.Shared.ComicBook, System.Boolean)))
  name.vb: RemoveWhere(Expression(Of Func(Of ComicBook, Boolean)))
  spec.csharp:
  - uid: ComicBookInventory.Shared.IGenericRepository`1.RemoveWhere(System.Linq.Expressions.Expression{Func{`0,System.Boolean}})
    name: RemoveWhere
    nameWithType: IGenericRepository<ComicBook>.RemoveWhere
    fullName: ComicBookInventory.Shared.IGenericRepository<ComicBookInventory.Shared.ComicBook>.RemoveWhere
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: ComicBookInventory.Shared.ComicBook
    name: ComicBook
    nameWithType: ComicBook
    fullName: ComicBookInventory.Shared.ComicBook
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ComicBookInventory.Shared.IGenericRepository`1.RemoveWhere(System.Linq.Expressions.Expression{Func{`0,System.Boolean}})
    name: RemoveWhere
    nameWithType: IGenericRepository(Of ComicBook).RemoveWhere
    fullName: ComicBookInventory.Shared.IGenericRepository(Of ComicBookInventory.Shared.ComicBook).RemoveWhere
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: ComicBookInventory.Shared.ComicBook
    name: ComicBook
    nameWithType: ComicBook
    fullName: ComicBookInventory.Shared.ComicBook
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.ComicBook}.RemoveRange(IEnumerable{ComicBookInventory.Shared.ComicBook})
  commentId: M:ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.ComicBook}.RemoveRange(IEnumerable{ComicBookInventory.Shared.ComicBook})
  parent: ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.ComicBook}
  definition: ComicBookInventory.Shared.IGenericRepository`1.RemoveRange(IEnumerable{`0})
  name: RemoveRange(IEnumerable<ComicBook>)
  nameWithType: IGenericRepository<ComicBook>.RemoveRange(IEnumerable<ComicBook>)
  fullName: ComicBookInventory.Shared.IGenericRepository<ComicBookInventory.Shared.ComicBook>.RemoveRange(IEnumerable<ComicBookInventory.Shared.ComicBook>)
  nameWithType.vb: IGenericRepository(Of ComicBook).RemoveRange(IEnumerable(Of ComicBook))
  fullName.vb: ComicBookInventory.Shared.IGenericRepository(Of ComicBookInventory.Shared.ComicBook).RemoveRange(IEnumerable(Of ComicBookInventory.Shared.ComicBook))
  name.vb: RemoveRange(IEnumerable(Of ComicBook))
  spec.csharp:
  - uid: ComicBookInventory.Shared.IGenericRepository`1.RemoveRange(IEnumerable{`0})
    name: RemoveRange
    nameWithType: IGenericRepository<ComicBook>.RemoveRange
    fullName: ComicBookInventory.Shared.IGenericRepository<ComicBookInventory.Shared.ComicBook>.RemoveRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: ComicBookInventory.Shared.ComicBook
    name: ComicBook
    nameWithType: ComicBook
    fullName: ComicBookInventory.Shared.ComicBook
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ComicBookInventory.Shared.IGenericRepository`1.RemoveRange(IEnumerable{`0})
    name: RemoveRange
    nameWithType: IGenericRepository(Of ComicBook).RemoveRange
    fullName: ComicBookInventory.Shared.IGenericRepository(Of ComicBookInventory.Shared.ComicBook).RemoveRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: ComicBookInventory.Shared.ComicBook
    name: ComicBook
    nameWithType: ComicBook
    fullName: ComicBookInventory.Shared.ComicBook
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: ComicBookInventory.Shared.IGenericRepository`1.GetAll
  commentId: M:ComicBookInventory.Shared.IGenericRepository`1.GetAll
  name: GetAll()
  nameWithType: IGenericRepository<T>.GetAll()
  fullName: ComicBookInventory.Shared.IGenericRepository<T>.GetAll()
  nameWithType.vb: IGenericRepository(Of T).GetAll()
  fullName.vb: ComicBookInventory.Shared.IGenericRepository(Of T).GetAll()
  spec.csharp:
  - uid: ComicBookInventory.Shared.IGenericRepository`1.GetAll
    name: GetAll
    nameWithType: IGenericRepository<T>.GetAll
    fullName: ComicBookInventory.Shared.IGenericRepository<T>.GetAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ComicBookInventory.Shared.IGenericRepository`1.GetAll
    name: GetAll
    nameWithType: IGenericRepository(Of T).GetAll
    fullName: ComicBookInventory.Shared.IGenericRepository(Of T).GetAll
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.ComicBook}
  commentId: T:ComicBookInventory.Shared.IGenericRepository{ComicBookInventory.Shared.ComicBook}
  parent: ComicBookInventory.Shared
  definition: ComicBookInventory.Shared.IGenericRepository`1
  name: IGenericRepository<ComicBook>
  nameWithType: IGenericRepository<ComicBook>
  fullName: ComicBookInventory.Shared.IGenericRepository<ComicBookInventory.Shared.ComicBook>
  nameWithType.vb: IGenericRepository(Of ComicBook)
  fullName.vb: ComicBookInventory.Shared.IGenericRepository(Of ComicBookInventory.Shared.ComicBook)
  name.vb: IGenericRepository(Of ComicBook)
  spec.csharp:
  - uid: ComicBookInventory.Shared.IGenericRepository`1
    name: IGenericRepository
    nameWithType: IGenericRepository
    fullName: ComicBookInventory.Shared.IGenericRepository
  - name: <
    nameWithType: <
    fullName: <
  - uid: ComicBookInventory.Shared.ComicBook
    name: ComicBook
    nameWithType: ComicBook
    fullName: ComicBookInventory.Shared.ComicBook
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ComicBookInventory.Shared.IGenericRepository`1
    name: IGenericRepository
    nameWithType: IGenericRepository
    fullName: ComicBookInventory.Shared.IGenericRepository
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: ComicBookInventory.Shared.ComicBook
    name: ComicBook
    nameWithType: ComicBook
    fullName: ComicBookInventory.Shared.ComicBook
  - name: )
    nameWithType: )
    fullName: )
- uid: ComicBookInventory.Shared.IGenericRepository`1.GetWhere(System.Linq.Expressions.Expression{Func{`0,System.Boolean}})
  commentId: M:ComicBookInventory.Shared.IGenericRepository`1.GetWhere(System.Linq.Expressions.Expression{Func{`0,System.Boolean}})
  isExternal: true
  name: GetWhere(Expression<Func<T, Boolean>>)
  nameWithType: IGenericRepository<T>.GetWhere(Expression<Func<T, Boolean>>)
  fullName: ComicBookInventory.Shared.IGenericRepository<T>.GetWhere(System.Linq.Expressions.Expression<Func<T, System.Boolean>>)
  nameWithType.vb: IGenericRepository(Of T).GetWhere(Expression(Of Func(Of T, Boolean)))
  fullName.vb: ComicBookInventory.Shared.IGenericRepository(Of T).GetWhere(System.Linq.Expressions.Expression(Of Func(Of T, System.Boolean)))
  name.vb: GetWhere(Expression(Of Func(Of T, Boolean)))
  spec.csharp:
  - uid: ComicBookInventory.Shared.IGenericRepository`1.GetWhere(System.Linq.Expressions.Expression{Func{`0,System.Boolean}})
    name: GetWhere
    nameWithType: IGenericRepository<T>.GetWhere
    fullName: ComicBookInventory.Shared.IGenericRepository<T>.GetWhere
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ComicBookInventory.Shared.IGenericRepository`1.GetWhere(System.Linq.Expressions.Expression{Func{`0,System.Boolean}})
    name: GetWhere
    nameWithType: IGenericRepository(Of T).GetWhere
    fullName: ComicBookInventory.Shared.IGenericRepository(Of T).GetWhere
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: ComicBookInventory.Shared.IGenericRepository`1.Find(System.Linq.Expressions.Expression{Func{`0,System.Boolean}})
  commentId: M:ComicBookInventory.Shared.IGenericRepository`1.Find(System.Linq.Expressions.Expression{Func{`0,System.Boolean}})
  isExternal: true
  name: Find(Expression<Func<T, Boolean>>)
  nameWithType: IGenericRepository<T>.Find(Expression<Func<T, Boolean>>)
  fullName: ComicBookInventory.Shared.IGenericRepository<T>.Find(System.Linq.Expressions.Expression<Func<T, System.Boolean>>)
  nameWithType.vb: IGenericRepository(Of T).Find(Expression(Of Func(Of T, Boolean)))
  fullName.vb: ComicBookInventory.Shared.IGenericRepository(Of T).Find(System.Linq.Expressions.Expression(Of Func(Of T, System.Boolean)))
  name.vb: Find(Expression(Of Func(Of T, Boolean)))
  spec.csharp:
  - uid: ComicBookInventory.Shared.IGenericRepository`1.Find(System.Linq.Expressions.Expression{Func{`0,System.Boolean}})
    name: Find
    nameWithType: IGenericRepository<T>.Find
    fullName: ComicBookInventory.Shared.IGenericRepository<T>.Find
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ComicBookInventory.Shared.IGenericRepository`1.Find(System.Linq.Expressions.Expression{Func{`0,System.Boolean}})
    name: Find
    nameWithType: IGenericRepository(Of T).Find
    fullName: ComicBookInventory.Shared.IGenericRepository(Of T).Find
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: ComicBookInventory.Shared.IGenericRepository`1.Add(`0)
  commentId: M:ComicBookInventory.Shared.IGenericRepository`1.Add(`0)
  name: Add(T)
  nameWithType: IGenericRepository<T>.Add(T)
  fullName: ComicBookInventory.Shared.IGenericRepository<T>.Add(T)
  nameWithType.vb: IGenericRepository(Of T).Add(T)
  fullName.vb: ComicBookInventory.Shared.IGenericRepository(Of T).Add(T)
  spec.csharp:
  - uid: ComicBookInventory.Shared.IGenericRepository`1.Add(`0)
    name: Add
    nameWithType: IGenericRepository<T>.Add
    fullName: ComicBookInventory.Shared.IGenericRepository<T>.Add
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ComicBookInventory.Shared.IGenericRepository`1.Add(`0)
    name: Add
    nameWithType: IGenericRepository(Of T).Add
    fullName: ComicBookInventory.Shared.IGenericRepository(Of T).Add
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: ComicBookInventory.Shared.IGenericRepository`1.AddRange(IEnumerable{`0})
  commentId: M:ComicBookInventory.Shared.IGenericRepository`1.AddRange(IEnumerable{`0})
  isExternal: true
  name: AddRange(IEnumerable<T>)
  nameWithType: IGenericRepository<T>.AddRange(IEnumerable<T>)
  fullName: ComicBookInventory.Shared.IGenericRepository<T>.AddRange(IEnumerable<T>)
  nameWithType.vb: IGenericRepository(Of T).AddRange(IEnumerable(Of T))
  fullName.vb: ComicBookInventory.Shared.IGenericRepository(Of T).AddRange(IEnumerable(Of T))
  name.vb: AddRange(IEnumerable(Of T))
  spec.csharp:
  - uid: ComicBookInventory.Shared.IGenericRepository`1.AddRange(IEnumerable{`0})
    name: AddRange
    nameWithType: IGenericRepository<T>.AddRange
    fullName: ComicBookInventory.Shared.IGenericRepository<T>.AddRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ComicBookInventory.Shared.IGenericRepository`1.AddRange(IEnumerable{`0})
    name: AddRange
    nameWithType: IGenericRepository(Of T).AddRange
    fullName: ComicBookInventory.Shared.IGenericRepository(Of T).AddRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: ComicBookInventory.Shared.IGenericRepository`1.Update(`0)
  commentId: M:ComicBookInventory.Shared.IGenericRepository`1.Update(`0)
  name: Update(T)
  nameWithType: IGenericRepository<T>.Update(T)
  fullName: ComicBookInventory.Shared.IGenericRepository<T>.Update(T)
  nameWithType.vb: IGenericRepository(Of T).Update(T)
  fullName.vb: ComicBookInventory.Shared.IGenericRepository(Of T).Update(T)
  spec.csharp:
  - uid: ComicBookInventory.Shared.IGenericRepository`1.Update(`0)
    name: Update
    nameWithType: IGenericRepository<T>.Update
    fullName: ComicBookInventory.Shared.IGenericRepository<T>.Update
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ComicBookInventory.Shared.IGenericRepository`1.Update(`0)
    name: Update
    nameWithType: IGenericRepository(Of T).Update
    fullName: ComicBookInventory.Shared.IGenericRepository(Of T).Update
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: ComicBookInventory.Shared.IGenericRepository`1.UpdateRange(IEnumerable{`0})
  commentId: M:ComicBookInventory.Shared.IGenericRepository`1.UpdateRange(IEnumerable{`0})
  isExternal: true
  name: UpdateRange(IEnumerable<T>)
  nameWithType: IGenericRepository<T>.UpdateRange(IEnumerable<T>)
  fullName: ComicBookInventory.Shared.IGenericRepository<T>.UpdateRange(IEnumerable<T>)
  nameWithType.vb: IGenericRepository(Of T).UpdateRange(IEnumerable(Of T))
  fullName.vb: ComicBookInventory.Shared.IGenericRepository(Of T).UpdateRange(IEnumerable(Of T))
  name.vb: UpdateRange(IEnumerable(Of T))
  spec.csharp:
  - uid: ComicBookInventory.Shared.IGenericRepository`1.UpdateRange(IEnumerable{`0})
    name: UpdateRange
    nameWithType: IGenericRepository<T>.UpdateRange
    fullName: ComicBookInventory.Shared.IGenericRepository<T>.UpdateRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ComicBookInventory.Shared.IGenericRepository`1.UpdateRange(IEnumerable{`0})
    name: UpdateRange
    nameWithType: IGenericRepository(Of T).UpdateRange
    fullName: ComicBookInventory.Shared.IGenericRepository(Of T).UpdateRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: ComicBookInventory.Shared.IGenericRepository`1.Remove(`0)
  commentId: M:ComicBookInventory.Shared.IGenericRepository`1.Remove(`0)
  name: Remove(T)
  nameWithType: IGenericRepository<T>.Remove(T)
  fullName: ComicBookInventory.Shared.IGenericRepository<T>.Remove(T)
  nameWithType.vb: IGenericRepository(Of T).Remove(T)
  fullName.vb: ComicBookInventory.Shared.IGenericRepository(Of T).Remove(T)
  spec.csharp:
  - uid: ComicBookInventory.Shared.IGenericRepository`1.Remove(`0)
    name: Remove
    nameWithType: IGenericRepository<T>.Remove
    fullName: ComicBookInventory.Shared.IGenericRepository<T>.Remove
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ComicBookInventory.Shared.IGenericRepository`1.Remove(`0)
    name: Remove
    nameWithType: IGenericRepository(Of T).Remove
    fullName: ComicBookInventory.Shared.IGenericRepository(Of T).Remove
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: ComicBookInventory.Shared.IGenericRepository`1.RemoveById(System.Int32)
  commentId: M:ComicBookInventory.Shared.IGenericRepository`1.RemoveById(System.Int32)
  isExternal: true
  name: RemoveById(Int32)
  nameWithType: IGenericRepository<T>.RemoveById(Int32)
  fullName: ComicBookInventory.Shared.IGenericRepository<T>.RemoveById(System.Int32)
  nameWithType.vb: IGenericRepository(Of T).RemoveById(Int32)
  fullName.vb: ComicBookInventory.Shared.IGenericRepository(Of T).RemoveById(System.Int32)
  spec.csharp:
  - uid: ComicBookInventory.Shared.IGenericRepository`1.RemoveById(System.Int32)
    name: RemoveById
    nameWithType: IGenericRepository<T>.RemoveById
    fullName: ComicBookInventory.Shared.IGenericRepository<T>.RemoveById
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ComicBookInventory.Shared.IGenericRepository`1.RemoveById(System.Int32)
    name: RemoveById
    nameWithType: IGenericRepository(Of T).RemoveById
    fullName: ComicBookInventory.Shared.IGenericRepository(Of T).RemoveById
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ComicBookInventory.Shared.IGenericRepository`1.RemoveWhere(System.Linq.Expressions.Expression{Func{`0,System.Boolean}})
  commentId: M:ComicBookInventory.Shared.IGenericRepository`1.RemoveWhere(System.Linq.Expressions.Expression{Func{`0,System.Boolean}})
  isExternal: true
  name: RemoveWhere(Expression<Func<T, Boolean>>)
  nameWithType: IGenericRepository<T>.RemoveWhere(Expression<Func<T, Boolean>>)
  fullName: ComicBookInventory.Shared.IGenericRepository<T>.RemoveWhere(System.Linq.Expressions.Expression<Func<T, System.Boolean>>)
  nameWithType.vb: IGenericRepository(Of T).RemoveWhere(Expression(Of Func(Of T, Boolean)))
  fullName.vb: ComicBookInventory.Shared.IGenericRepository(Of T).RemoveWhere(System.Linq.Expressions.Expression(Of Func(Of T, System.Boolean)))
  name.vb: RemoveWhere(Expression(Of Func(Of T, Boolean)))
  spec.csharp:
  - uid: ComicBookInventory.Shared.IGenericRepository`1.RemoveWhere(System.Linq.Expressions.Expression{Func{`0,System.Boolean}})
    name: RemoveWhere
    nameWithType: IGenericRepository<T>.RemoveWhere
    fullName: ComicBookInventory.Shared.IGenericRepository<T>.RemoveWhere
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ComicBookInventory.Shared.IGenericRepository`1.RemoveWhere(System.Linq.Expressions.Expression{Func{`0,System.Boolean}})
    name: RemoveWhere
    nameWithType: IGenericRepository(Of T).RemoveWhere
    fullName: ComicBookInventory.Shared.IGenericRepository(Of T).RemoveWhere
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: ComicBookInventory.Shared.IGenericRepository`1.RemoveRange(IEnumerable{`0})
  commentId: M:ComicBookInventory.Shared.IGenericRepository`1.RemoveRange(IEnumerable{`0})
  isExternal: true
  name: RemoveRange(IEnumerable<T>)
  nameWithType: IGenericRepository<T>.RemoveRange(IEnumerable<T>)
  fullName: ComicBookInventory.Shared.IGenericRepository<T>.RemoveRange(IEnumerable<T>)
  nameWithType.vb: IGenericRepository(Of T).RemoveRange(IEnumerable(Of T))
  fullName.vb: ComicBookInventory.Shared.IGenericRepository(Of T).RemoveRange(IEnumerable(Of T))
  name.vb: RemoveRange(IEnumerable(Of T))
  spec.csharp:
  - uid: ComicBookInventory.Shared.IGenericRepository`1.RemoveRange(IEnumerable{`0})
    name: RemoveRange
    nameWithType: IGenericRepository<T>.RemoveRange
    fullName: ComicBookInventory.Shared.IGenericRepository<T>.RemoveRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ComicBookInventory.Shared.IGenericRepository`1.RemoveRange(IEnumerable{`0})
    name: RemoveRange
    nameWithType: IGenericRepository(Of T).RemoveRange
    fullName: ComicBookInventory.Shared.IGenericRepository(Of T).RemoveRange
  - name: (
    nameWithType: (
    fullName: (
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: ComicBookInventory.Shared.IGenericRepository`1
  commentId: T:ComicBookInventory.Shared.IGenericRepository`1
  name: IGenericRepository<T>
  nameWithType: IGenericRepository<T>
  fullName: ComicBookInventory.Shared.IGenericRepository<T>
  nameWithType.vb: IGenericRepository(Of T)
  fullName.vb: ComicBookInventory.Shared.IGenericRepository(Of T)
  name.vb: IGenericRepository(Of T)
  spec.csharp:
  - uid: ComicBookInventory.Shared.IGenericRepository`1
    name: IGenericRepository
    nameWithType: IGenericRepository
    fullName: ComicBookInventory.Shared.IGenericRepository
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ComicBookInventory.Shared.IGenericRepository`1
    name: IGenericRepository
    nameWithType: IGenericRepository
    fullName: ComicBookInventory.Shared.IGenericRepository
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: ComicBookInventory.Shared.IComicBookRepository.GetAllBooks*
  commentId: Overload:ComicBookInventory.Shared.IComicBookRepository.GetAllBooks
  name: GetAllBooks
  nameWithType: IComicBookRepository.GetAllBooks
  fullName: ComicBookInventory.Shared.IComicBookRepository.GetAllBooks
- uid: IEnumerable{ComicBookInventory.Shared.ComicBookWithAuthorsAndCharactersViewModel}
  commentId: '!:IEnumerable{ComicBookInventory.Shared.ComicBookWithAuthorsAndCharactersViewModel}'
  definition: IEnumerable`1
  name: IEnumerable<ComicBookWithAuthorsAndCharactersViewModel>
  nameWithType: IEnumerable<ComicBookWithAuthorsAndCharactersViewModel>
  fullName: IEnumerable<ComicBookInventory.Shared.ComicBookWithAuthorsAndCharactersViewModel>
  nameWithType.vb: IEnumerable(Of ComicBookWithAuthorsAndCharactersViewModel)
  fullName.vb: IEnumerable(Of ComicBookInventory.Shared.ComicBookWithAuthorsAndCharactersViewModel)
  name.vb: IEnumerable(Of ComicBookWithAuthorsAndCharactersViewModel)
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: ComicBookInventory.Shared.ComicBookWithAuthorsAndCharactersViewModel
    name: ComicBookWithAuthorsAndCharactersViewModel
    nameWithType: ComicBookWithAuthorsAndCharactersViewModel
    fullName: ComicBookInventory.Shared.ComicBookWithAuthorsAndCharactersViewModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: ComicBookInventory.Shared.ComicBookWithAuthorsAndCharactersViewModel
    name: ComicBookWithAuthorsAndCharactersViewModel
    nameWithType: ComicBookWithAuthorsAndCharactersViewModel
    fullName: ComicBookInventory.Shared.ComicBookWithAuthorsAndCharactersViewModel
  - name: )
    nameWithType: )
    fullName: )
- uid: IEnumerable`1
  isExternal: true
  name: IEnumerable<>
  nameWithType: IEnumerable<>
  fullName: IEnumerable<>
  nameWithType.vb: IEnumerable(Of )
  fullName.vb: IEnumerable(Of )
  name.vb: IEnumerable(Of )
  spec.csharp:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: ComicBookInventory.Shared.IComicBookRepository.GetBookById*
  commentId: Overload:ComicBookInventory.Shared.IComicBookRepository.GetBookById
  name: GetBookById
  nameWithType: IComicBookRepository.GetBookById
  fullName: ComicBookInventory.Shared.IComicBookRepository.GetBookById
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: ComicBookInventory.Shared.ComicBookWithAuthorsAndCharactersViewModel
  commentId: T:ComicBookInventory.Shared.ComicBookWithAuthorsAndCharactersViewModel
  parent: ComicBookInventory.Shared
  name: ComicBookWithAuthorsAndCharactersViewModel
  nameWithType: ComicBookWithAuthorsAndCharactersViewModel
  fullName: ComicBookInventory.Shared.ComicBookWithAuthorsAndCharactersViewModel
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: ComicBookInventory.Shared.IComicBookRepository.AddBook*
  commentId: Overload:ComicBookInventory.Shared.IComicBookRepository.AddBook
  name: AddBook
  nameWithType: IComicBookRepository.AddBook
  fullName: ComicBookInventory.Shared.IComicBookRepository.AddBook
- uid: ComicBookInventory.Shared.IComicBookRepository.UpdateBook*
  commentId: Overload:ComicBookInventory.Shared.IComicBookRepository.UpdateBook
  name: UpdateBook
  nameWithType: IComicBookRepository.UpdateBook
  fullName: ComicBookInventory.Shared.IComicBookRepository.UpdateBook
- uid: ComicBookInventory.Shared.ComicBookViewModel
  commentId: T:ComicBookInventory.Shared.ComicBookViewModel
  parent: ComicBookInventory.Shared
  name: ComicBookViewModel
  nameWithType: ComicBookViewModel
  fullName: ComicBookInventory.Shared.ComicBookViewModel

### YamlMime:ManagedReference
items:
- uid: ComicBookInventory.Shared.ComicBook
  commentId: T:ComicBookInventory.Shared.ComicBook
  id: ComicBook
  parent: ComicBookInventory.Shared
  children:
  - ComicBookInventory.Shared.ComicBook.ComicBook_Authors
  - ComicBookInventory.Shared.ComicBook.ComicBook_Characters
  - ComicBookInventory.Shared.ComicBook.CoverUrl
  - ComicBookInventory.Shared.ComicBook.DateAdded
  - ComicBookInventory.Shared.ComicBook.DateRead
  - ComicBookInventory.Shared.ComicBook.Description
  - ComicBookInventory.Shared.ComicBook.Genre
  - ComicBookInventory.Shared.ComicBook.Id
  - ComicBookInventory.Shared.ComicBook.IsRead
  - ComicBookInventory.Shared.ComicBook.Rating
  - ComicBookInventory.Shared.ComicBook.Title
  langs:
  - csharp
  - vb
  name: ComicBook
  nameWithType: ComicBook
  fullName: ComicBookInventory.Shared.ComicBook
  type: Class
  source:
    remote:
      path: src/ComicBookInventory.Domain/Entities/ComicBook.cs
      branch: wip/extend-character-model
      repo: git@github.com:rnemeth90/ComicBookInventoryApp.git
    id: ComicBook
    path: Entities/ComicBook.cs
    startLine: 4
  assemblies:
  - ComicBookInventory.Domain
  namespace: ComicBookInventory.Shared
  syntax:
    content: 'public class ComicBook : IComicBook'
    content.vb: >-
      Public Class ComicBook
          Implements IComicBook
  inheritance:
  - System.Object
  implements:
  - ComicBookInventory.Shared.IComicBook
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: ComicBookInventory.Shared.ComicBook.Id
  commentId: P:ComicBookInventory.Shared.ComicBook.Id
  id: Id
  parent: ComicBookInventory.Shared.ComicBook
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: ComicBook.Id
  fullName: ComicBookInventory.Shared.ComicBook.Id
  type: Property
  source:
    remote:
      path: src/ComicBookInventory.Domain/Entities/ComicBook.cs
      branch: wip/extend-character-model
      repo: git@github.com:rnemeth90/ComicBookInventoryApp.git
    id: Id
    path: Entities/ComicBook.cs
    startLine: 6
  assemblies:
  - ComicBookInventory.Domain
  namespace: ComicBookInventory.Shared
  syntax:
    content: public int Id { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Id As Integer
  overload: ComicBookInventory.Shared.ComicBook.Id*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ComicBookInventory.Shared.ComicBook.Title
  commentId: P:ComicBookInventory.Shared.ComicBook.Title
  id: Title
  parent: ComicBookInventory.Shared.ComicBook
  langs:
  - csharp
  - vb
  name: Title
  nameWithType: ComicBook.Title
  fullName: ComicBookInventory.Shared.ComicBook.Title
  type: Property
  source:
    remote:
      path: src/ComicBookInventory.Domain/Entities/ComicBook.cs
      branch: wip/extend-character-model
      repo: git@github.com:rnemeth90/ComicBookInventoryApp.git
    id: Title
    path: Entities/ComicBook.cs
    startLine: 7
  assemblies:
  - ComicBookInventory.Domain
  namespace: ComicBookInventory.Shared
  syntax:
    content: public string Title { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Title As String
  overload: ComicBookInventory.Shared.ComicBook.Title*
  implements:
  - ComicBookInventory.Shared.IComicBook.Title
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ComicBookInventory.Shared.ComicBook.Description
  commentId: P:ComicBookInventory.Shared.ComicBook.Description
  id: Description
  parent: ComicBookInventory.Shared.ComicBook
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: ComicBook.Description
  fullName: ComicBookInventory.Shared.ComicBook.Description
  type: Property
  source:
    remote:
      path: src/ComicBookInventory.Domain/Entities/ComicBook.cs
      branch: wip/extend-character-model
      repo: git@github.com:rnemeth90/ComicBookInventoryApp.git
    id: Description
    path: Entities/ComicBook.cs
    startLine: 8
  assemblies:
  - ComicBookInventory.Domain
  namespace: ComicBookInventory.Shared
  syntax:
    content: public string Description { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Description As String
  overload: ComicBookInventory.Shared.ComicBook.Description*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ComicBookInventory.Shared.ComicBook.IsRead
  commentId: P:ComicBookInventory.Shared.ComicBook.IsRead
  id: IsRead
  parent: ComicBookInventory.Shared.ComicBook
  langs:
  - csharp
  - vb
  name: IsRead
  nameWithType: ComicBook.IsRead
  fullName: ComicBookInventory.Shared.ComicBook.IsRead
  type: Property
  source:
    remote:
      path: src/ComicBookInventory.Domain/Entities/ComicBook.cs
      branch: wip/extend-character-model
      repo: git@github.com:rnemeth90/ComicBookInventoryApp.git
    id: IsRead
    path: Entities/ComicBook.cs
    startLine: 9
  assemblies:
  - ComicBookInventory.Domain
  namespace: ComicBookInventory.Shared
  syntax:
    content: public bool IsRead { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsRead As Boolean
  overload: ComicBookInventory.Shared.ComicBook.IsRead*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ComicBookInventory.Shared.ComicBook.DateRead
  commentId: P:ComicBookInventory.Shared.ComicBook.DateRead
  id: DateRead
  parent: ComicBookInventory.Shared.ComicBook
  langs:
  - csharp
  - vb
  name: DateRead
  nameWithType: ComicBook.DateRead
  fullName: ComicBookInventory.Shared.ComicBook.DateRead
  type: Property
  source:
    remote:
      path: src/ComicBookInventory.Domain/Entities/ComicBook.cs
      branch: wip/extend-character-model
      repo: git@github.com:rnemeth90/ComicBookInventoryApp.git
    id: DateRead
    path: Entities/ComicBook.cs
    startLine: 10
  assemblies:
  - ComicBookInventory.Domain
  namespace: ComicBookInventory.Shared
  syntax:
    content: public DateTime? DateRead { get; set; }
    parameters: []
    return:
      type: System.Nullable{DateTime}
    content.vb: Public Property DateRead As DateTime?
  overload: ComicBookInventory.Shared.ComicBook.DateRead*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ComicBookInventory.Shared.ComicBook.Rating
  commentId: P:ComicBookInventory.Shared.ComicBook.Rating
  id: Rating
  parent: ComicBookInventory.Shared.ComicBook
  langs:
  - csharp
  - vb
  name: Rating
  nameWithType: ComicBook.Rating
  fullName: ComicBookInventory.Shared.ComicBook.Rating
  type: Property
  source:
    remote:
      path: src/ComicBookInventory.Domain/Entities/ComicBook.cs
      branch: wip/extend-character-model
      repo: git@github.com:rnemeth90/ComicBookInventoryApp.git
    id: Rating
    path: Entities/ComicBook.cs
    startLine: 11
  assemblies:
  - ComicBookInventory.Domain
  namespace: ComicBookInventory.Shared
  syntax:
    content: public int? Rating { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public Property Rating As Integer?
  overload: ComicBookInventory.Shared.ComicBook.Rating*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ComicBookInventory.Shared.ComicBook.Genre
  commentId: P:ComicBookInventory.Shared.ComicBook.Genre
  id: Genre
  parent: ComicBookInventory.Shared.ComicBook
  langs:
  - csharp
  - vb
  name: Genre
  nameWithType: ComicBook.Genre
  fullName: ComicBookInventory.Shared.ComicBook.Genre
  type: Property
  source:
    remote:
      path: src/ComicBookInventory.Domain/Entities/ComicBook.cs
      branch: wip/extend-character-model
      repo: git@github.com:rnemeth90/ComicBookInventoryApp.git
    id: Genre
    path: Entities/ComicBook.cs
    startLine: 12
  assemblies:
  - ComicBookInventory.Domain
  namespace: ComicBookInventory.Shared
  syntax:
    content: public string Genre { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Genre As String
  overload: ComicBookInventory.Shared.ComicBook.Genre*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ComicBookInventory.Shared.ComicBook.CoverUrl
  commentId: P:ComicBookInventory.Shared.ComicBook.CoverUrl
  id: CoverUrl
  parent: ComicBookInventory.Shared.ComicBook
  langs:
  - csharp
  - vb
  name: CoverUrl
  nameWithType: ComicBook.CoverUrl
  fullName: ComicBookInventory.Shared.ComicBook.CoverUrl
  type: Property
  source:
    remote:
      path: src/ComicBookInventory.Domain/Entities/ComicBook.cs
      branch: wip/extend-character-model
      repo: git@github.com:rnemeth90/ComicBookInventoryApp.git
    id: CoverUrl
    path: Entities/ComicBook.cs
    startLine: 13
  assemblies:
  - ComicBookInventory.Domain
  namespace: ComicBookInventory.Shared
  syntax:
    content: public string CoverUrl { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property CoverUrl As String
  overload: ComicBookInventory.Shared.ComicBook.CoverUrl*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ComicBookInventory.Shared.ComicBook.DateAdded
  commentId: P:ComicBookInventory.Shared.ComicBook.DateAdded
  id: DateAdded
  parent: ComicBookInventory.Shared.ComicBook
  langs:
  - csharp
  - vb
  name: DateAdded
  nameWithType: ComicBook.DateAdded
  fullName: ComicBookInventory.Shared.ComicBook.DateAdded
  type: Property
  source:
    remote:
      path: src/ComicBookInventory.Domain/Entities/ComicBook.cs
      branch: wip/extend-character-model
      repo: git@github.com:rnemeth90/ComicBookInventoryApp.git
    id: DateAdded
    path: Entities/ComicBook.cs
    startLine: 14
  assemblies:
  - ComicBookInventory.Domain
  namespace: ComicBookInventory.Shared
  syntax:
    content: public DateTime DateAdded { get; set; }
    parameters: []
    return:
      type: DateTime
    content.vb: Public Property DateAdded As DateTime
  overload: ComicBookInventory.Shared.ComicBook.DateAdded*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ComicBookInventory.Shared.ComicBook.ComicBook_Authors
  commentId: P:ComicBookInventory.Shared.ComicBook.ComicBook_Authors
  id: ComicBook_Authors
  parent: ComicBookInventory.Shared.ComicBook
  langs:
  - csharp
  - vb
  name: ComicBook_Authors
  nameWithType: ComicBook.ComicBook_Authors
  fullName: ComicBookInventory.Shared.ComicBook.ComicBook_Authors
  type: Property
  source:
    remote:
      path: src/ComicBookInventory.Domain/Entities/ComicBook.cs
      branch: wip/extend-character-model
      repo: git@github.com:rnemeth90/ComicBookInventoryApp.git
    id: ComicBook_Authors
    path: Entities/ComicBook.cs
    startLine: 18
  assemblies:
  - ComicBookInventory.Domain
  namespace: ComicBookInventory.Shared
  syntax:
    content: >-
      [JsonIgnore]

      public ICollection<ComicBook_Author> ComicBook_Authors { get; set; }
    parameters: []
    return:
      type: ICollection{ComicBookInventory.Shared.ComicBook_Author}
    content.vb: >-
      <JsonIgnore>

      Public Property ComicBook_Authors As ICollection(Of ComicBook_Author)
  overload: ComicBookInventory.Shared.ComicBook.ComicBook_Authors*
  attributes:
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ComicBookInventory.Shared.ComicBook.ComicBook_Characters
  commentId: P:ComicBookInventory.Shared.ComicBook.ComicBook_Characters
  id: ComicBook_Characters
  parent: ComicBookInventory.Shared.ComicBook
  langs:
  - csharp
  - vb
  name: ComicBook_Characters
  nameWithType: ComicBook.ComicBook_Characters
  fullName: ComicBookInventory.Shared.ComicBook.ComicBook_Characters
  type: Property
  source:
    remote:
      path: src/ComicBookInventory.Domain/Entities/ComicBook.cs
      branch: wip/extend-character-model
      repo: git@github.com:rnemeth90/ComicBookInventoryApp.git
    id: ComicBook_Characters
    path: Entities/ComicBook.cs
    startLine: 20
  assemblies:
  - ComicBookInventory.Domain
  namespace: ComicBookInventory.Shared
  syntax:
    content: >-
      [JsonIgnore]

      public ICollection<ComicBook_Character> ComicBook_Characters { get; set; }
    parameters: []
    return:
      type: ICollection{ComicBookInventory.Shared.ComicBook_Character}
    content.vb: >-
      <JsonIgnore>

      Public Property ComicBook_Characters As ICollection(Of ComicBook_Character)
  overload: ComicBookInventory.Shared.ComicBook.ComicBook_Characters*
  attributes:
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: ComicBookInventory.Shared
  commentId: N:ComicBookInventory.Shared
  name: ComicBookInventory.Shared
  nameWithType: ComicBookInventory.Shared
  fullName: ComicBookInventory.Shared
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: ComicBookInventory.Shared.IComicBook
  commentId: T:ComicBookInventory.Shared.IComicBook
  parent: ComicBookInventory.Shared
  name: IComicBook
  nameWithType: IComicBook
  fullName: ComicBookInventory.Shared.IComicBook
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: ComicBookInventory.Shared.ComicBook.Id*
  commentId: Overload:ComicBookInventory.Shared.ComicBook.Id
  name: Id
  nameWithType: ComicBook.Id
  fullName: ComicBookInventory.Shared.ComicBook.Id
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: ComicBookInventory.Shared.ComicBook.Title*
  commentId: Overload:ComicBookInventory.Shared.ComicBook.Title
  name: Title
  nameWithType: ComicBook.Title
  fullName: ComicBookInventory.Shared.ComicBook.Title
- uid: ComicBookInventory.Shared.IComicBook.Title
  commentId: P:ComicBookInventory.Shared.IComicBook.Title
  parent: ComicBookInventory.Shared.IComicBook
  name: Title
  nameWithType: IComicBook.Title
  fullName: ComicBookInventory.Shared.IComicBook.Title
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: ComicBookInventory.Shared.ComicBook.Description*
  commentId: Overload:ComicBookInventory.Shared.ComicBook.Description
  name: Description
  nameWithType: ComicBook.Description
  fullName: ComicBookInventory.Shared.ComicBook.Description
- uid: ComicBookInventory.Shared.ComicBook.IsRead*
  commentId: Overload:ComicBookInventory.Shared.ComicBook.IsRead
  name: IsRead
  nameWithType: ComicBook.IsRead
  fullName: ComicBookInventory.Shared.ComicBook.IsRead
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: ComicBookInventory.Shared.ComicBook.DateRead*
  commentId: Overload:ComicBookInventory.Shared.ComicBook.DateRead
  name: DateRead
  nameWithType: ComicBook.DateRead
  fullName: ComicBookInventory.Shared.ComicBook.DateRead
- uid: System.Nullable{DateTime}
  commentId: T:System.Nullable{DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullName.vb: System.Nullable(Of DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: ComicBookInventory.Shared.ComicBook.Rating*
  commentId: Overload:ComicBookInventory.Shared.ComicBook.Rating
  name: Rating
  nameWithType: ComicBook.Rating
  fullName: ComicBookInventory.Shared.ComicBook.Rating
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ComicBookInventory.Shared.ComicBook.Genre*
  commentId: Overload:ComicBookInventory.Shared.ComicBook.Genre
  name: Genre
  nameWithType: ComicBook.Genre
  fullName: ComicBookInventory.Shared.ComicBook.Genre
- uid: ComicBookInventory.Shared.ComicBook.CoverUrl*
  commentId: Overload:ComicBookInventory.Shared.ComicBook.CoverUrl
  name: CoverUrl
  nameWithType: ComicBook.CoverUrl
  fullName: ComicBookInventory.Shared.ComicBook.CoverUrl
- uid: ComicBookInventory.Shared.ComicBook.DateAdded*
  commentId: Overload:ComicBookInventory.Shared.ComicBook.DateAdded
  name: DateAdded
  nameWithType: ComicBook.DateAdded
  fullName: ComicBookInventory.Shared.ComicBook.DateAdded
- uid: DateTime
  commentId: '!:DateTime'
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: DateTime
- uid: ComicBookInventory.Shared.ComicBook.ComicBook_Authors*
  commentId: Overload:ComicBookInventory.Shared.ComicBook.ComicBook_Authors
  name: ComicBook_Authors
  nameWithType: ComicBook.ComicBook_Authors
  fullName: ComicBookInventory.Shared.ComicBook.ComicBook_Authors
- uid: ICollection{ComicBookInventory.Shared.ComicBook_Author}
  commentId: '!:ICollection{ComicBookInventory.Shared.ComicBook_Author}'
  definition: ICollection`1
  name: ICollection<ComicBook_Author>
  nameWithType: ICollection<ComicBook_Author>
  fullName: ICollection<ComicBookInventory.Shared.ComicBook_Author>
  nameWithType.vb: ICollection(Of ComicBook_Author)
  fullName.vb: ICollection(Of ComicBookInventory.Shared.ComicBook_Author)
  name.vb: ICollection(Of ComicBook_Author)
  spec.csharp:
  - uid: ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: ComicBookInventory.Shared.ComicBook_Author
    name: ComicBook_Author
    nameWithType: ComicBook_Author
    fullName: ComicBookInventory.Shared.ComicBook_Author
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: ComicBookInventory.Shared.ComicBook_Author
    name: ComicBook_Author
    nameWithType: ComicBook_Author
    fullName: ComicBookInventory.Shared.ComicBook_Author
  - name: )
    nameWithType: )
    fullName: )
- uid: ICollection`1
  isExternal: true
  name: ICollection<>
  nameWithType: ICollection<>
  fullName: ICollection<>
  nameWithType.vb: ICollection(Of )
  fullName.vb: ICollection(Of )
  name.vb: ICollection(Of )
  spec.csharp:
  - uid: ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: ComicBookInventory.Shared.ComicBook.ComicBook_Characters*
  commentId: Overload:ComicBookInventory.Shared.ComicBook.ComicBook_Characters
  name: ComicBook_Characters
  nameWithType: ComicBook.ComicBook_Characters
  fullName: ComicBookInventory.Shared.ComicBook.ComicBook_Characters
- uid: ICollection{ComicBookInventory.Shared.ComicBook_Character}
  commentId: '!:ICollection{ComicBookInventory.Shared.ComicBook_Character}'
  definition: ICollection`1
  name: ICollection<ComicBook_Character>
  nameWithType: ICollection<ComicBook_Character>
  fullName: ICollection<ComicBookInventory.Shared.ComicBook_Character>
  nameWithType.vb: ICollection(Of ComicBook_Character)
  fullName.vb: ICollection(Of ComicBookInventory.Shared.ComicBook_Character)
  name.vb: ICollection(Of ComicBook_Character)
  spec.csharp:
  - uid: ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: ComicBookInventory.Shared.ComicBook_Character
    name: ComicBook_Character
    nameWithType: ComicBook_Character
    fullName: ComicBookInventory.Shared.ComicBook_Character
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: ComicBookInventory.Shared.ComicBook_Character
    name: ComicBook_Character
    nameWithType: ComicBook_Character
    fullName: ComicBookInventory.Shared.ComicBook_Character
  - name: )
    nameWithType: )
    fullName: )
